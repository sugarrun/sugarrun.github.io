<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Run! Sugar,Run!</title>
  <subtitle>If you are ever in trouble, don&#39;t try to be brave, just run, just run away.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://sugar.yer.pub/"/>
  <updated>2016-12-16T03:34:21.627Z</updated>
  <id>http://sugar.yer.pub/</id>
  
  <author>
    <name>Ouroporos</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>英语中虚拟语气的用法及解析</title>
    <link href="http://sugar.yer.pub/2016/12/16/%E8%8B%B1%E8%AF%AD%E4%B8%AD%E8%99%9A%E6%8B%9F%E8%AF%AD%E6%B0%94%E7%9A%84%E7%94%A8%E6%B3%95%E5%8F%8A%E8%A7%A3%E6%9E%90/"/>
    <id>http://sugar.yer.pub/2016/12/16/英语中虚拟语气的用法及解析/</id>
    <published>2016-12-16T03:06:01.000Z</published>
    <updated>2016-12-16T03:34:21.627Z</updated>
    
    <content type="html"><![CDATA[<p>整理自教学笔记和网络<br><a id="more"></a></p>
<h2 id="虚拟语气"><a href="#虚拟语气" class="headerlink" title="虚拟语气"></a>虚拟语气</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>虚拟语气用来表示假想，而不表示客观存在的事实，所说的是一个条件，不一定是事实，或与事实相反。</p>
<p>虚拟语气通过谓语动词的特殊形式来表示。</p>
<p>英语中的语气分为陈述语气、祈使语气、<code>虚拟语气</code>三类。</p>
<p>虚拟语气表示说话者所说的话并非事实，或难以实现的，甚至表达相反的概念。</p>
<p>另外表示主观愿望或表达某种强烈的感情时，也用虚拟语气。</p>
<h3 id="if引导的虚拟语气"><a href="#if引导的虚拟语气" class="headerlink" title="if引导的虚拟语气"></a>if引导的虚拟语气</h3><h4 id="条件句中的虚拟语气"><a href="#条件句中的虚拟语气" class="headerlink" title="条件句中的虚拟语气"></a>条件句中的虚拟语气</h4><p>从句中提出一种与客观现实不相符或根本不可能存在的条件，主句会产生的一种不可能获得的结果。</p>
<p>条件句中的虚拟语气根据不同的时间有三种不同的形式。</p>
<h5 id="将来时的条件句中的虚拟语气，如："><a href="#将来时的条件句中的虚拟语气，如：" class="headerlink" title="将来时的条件句中的虚拟语气，如："></a>将来时的条件句中的虚拟语气，如：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">If he should go to Qing Hua University he would make full use of his time.</div><div class="line">如果他要上清华大学的话，他就会充分利用他的时间了。</div><div class="line"></div><div class="line">If he were to come here he would tell us about it.</div><div class="line">如果他要来的话，他会通知我们一声。</div></pre></td></tr></table></figure>
<h5 id="现在时的条件句中的虚拟语气，如："><a href="#现在时的条件句中的虚拟语气，如：" class="headerlink" title="现在时的条件句中的虚拟语气，如："></a>现在时的条件句中的虚拟语气，如：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">If he were free he would help us.</div><div class="line">要是他有空的话，它会帮助我们的。</div><div class="line"></div><div class="line">If he studied at this school he would know you well.</div><div class="line">如果他在这所学校学习的话，它会对你很熟悉。</div></pre></td></tr></table></figure>
<h5 id="过去时的条件句中的虚拟语气，如："><a href="#过去时的条件句中的虚拟语气，如：" class="headerlink" title="过去时的条件句中的虚拟语气，如："></a>过去时的条件句中的虚拟语气，如：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">If I had seen the film I would have told you about it.</div><div class="line">我如果看过这场电影，我会把电影内容告诉你了。</div><div class="line"></div><div class="line">If I had got there earlier I would have met Mr. Li.</div><div class="line">如果我早点到那儿，我就会会到了李先生。</div></pre></td></tr></table></figure>
<h4 id="条件句中的虚拟语气需要注意的问题"><a href="#条件句中的虚拟语气需要注意的问题" class="headerlink" title="条件句中的虚拟语气需要注意的问题"></a>条件句中的虚拟语气需要注意的问题</h4><h5 id="was-和-were"><a href="#was-和-were" class="headerlink" title="was 和 were"></a>was 和 were</h5><p>当从句的主语为第三人称单数时，谓语动词若是系动词be时，可用 was 代替 were;<br>但在倒装虚拟结构及 if I were you 、 as it were 中，只能用 were。<br>如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Were I ten years younger I would study abroad.</div><div class="line">要是我还年轻十岁的话，我会去国外学习。</div><div class="line"></div><div class="line">If I were you I would try my best to grasp the chance.</div><div class="line">要是我是你的话，我要尽力抓住这次机会。</div></pre></td></tr></table></figure></p>
<h5 id="非同时发生"><a href="#非同时发生" class="headerlink" title="非同时发生"></a>非同时发生</h5><p>有时，虚拟条件句中，主、从句的动作若不是同时发生时，须区别对待。</p>
<h6 id="与正在发生的事实不符"><a href="#与正在发生的事实不符" class="headerlink" title="与正在发生的事实不符"></a>与正在发生的事实不符</h6><p>从句的动作与过去事实相反，而主句的动作与现在或现在正在发生的事实不符。如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">If I had worked hard at school I would be an engineer too.</div><div class="line">如果我在学校学习刻苦的话，我现在也会使工程师了</div><div class="line"></div><div class="line">If they had informed us we would not come here now.</div><div class="line">如果他们通知过我们的话，我们现在就不会来这里了。</div></pre></td></tr></table></figure></p>
<h6 id="与过去事实不符"><a href="#与过去事实不符" class="headerlink" title="与过去事实不符"></a>与过去事实不符</h6><p>从句的动作与现在事实相反，而主句的动作与过去事实不符。如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">If he were free today we would have sent him to Beijing.</div><div class="line">如果他今天有空的话，我们会已经派他去北京了。</div><div class="line"></div><div class="line">If he knew her he would have greeted her.</div><div class="line">要是他认识她的话，他肯定会去问候她了。</div></pre></td></tr></table></figure></p>
<h6 id="与正在发生的事实相反"><a href="#与正在发生的事实相反" class="headerlink" title="与正在发生的事实相反"></a>与正在发生的事实相反</h6><p>从句的动作与过去发生的情况相反，而主句的动作与现在正在发生的情况相反。如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">If it had not been raining too much the crops would be growing much better.</div><div class="line">如果天不下太多的雨的话，庄家会长得更好。</div><div class="line"></div><div class="line">If he had been working hard he would be working in the office now.</div><div class="line">要是他工作一直努力的话，他现在已进了办公室了。</div></pre></td></tr></table></figure></p>
<h5 id="含有特定谓语时，if可省略"><a href="#含有特定谓语时，if可省略" class="headerlink" title="含有特定谓语时，if可省略"></a>含有特定谓语时，if可省略</h5><p>当虚拟条件句的谓语动词含有 were should had 时，if 可省略，而将 were should had等词置于句首。如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Should he agree to go there we would send him there.</div><div class="line">要是他答应去的话，我们就派他去。</div><div class="line"></div><div class="line">Were she here she would agree with us.</div><div class="line">如果她在这儿的话，她会同意我们的。</div><div class="line"></div><div class="line">Had he learnt about computers we would have hired him to work here.</div><div class="line">如果她懂一些电脑知识的话，我们会已经聘用他来这里工作了</div></pre></td></tr></table></figure></p>
<h5 id="需由上下文判断语境"><a href="#需由上下文判断语境" class="headerlink" title="需由上下文判断语境"></a>需由上下文判断语境</h5><p>有时，句子没有直接给出假设情况的条件，而须通过上下文或其他方式来判断。如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">I would have come to see you but I was too busy.</div><div class="line">我本该来看你了，然而我太忙了。</div><div class="line"></div><div class="line">But for his help we would be working now.</div><div class="line">要不是他的帮助，我们还会在工作呢。</div><div class="line"></div><div class="line">Without your instruction I would not have made such great progress.</div><div class="line">要是没有你的指导，我不会取得如此大的进步。</div></pre></td></tr></table></figure></p>
<h5 id="省略主或从句之一"><a href="#省略主或从句之一" class="headerlink" title="省略主或从句之一"></a>省略主或从句之一</h5><p>有时，虚拟条件句中，主、从句可以省略其中的一个，来表示说话人的一种强烈的感情。</p>
<h6 id="省略从句"><a href="#省略从句" class="headerlink" title="省略从句"></a>省略从句</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">He would have finished it.</div><div class="line">他本该完成了。</div><div class="line"></div><div class="line">You could have passed this exam.</div><div class="line">你应该会通过这次考试了。</div></pre></td></tr></table></figure>
<h6 id="省略主句"><a href="#省略主句" class="headerlink" title="省略主句"></a>省略主句</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">If I were at home now.</div><div class="line">要是我现在在家里该多好啊。</div><div class="line"></div><div class="line">If only I had got it.</div><div class="line">要是我得到它了该多好啊。</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;整理自教学笔记和网络&lt;br&gt;
    
    </summary>
    
      <category term="英语" scheme="http://sugar.yer.pub/categories/%E8%8B%B1%E8%AF%AD/"/>
    
    
      <category term="英语" scheme="http://sugar.yer.pub/tags/%E8%8B%B1%E8%AF%AD/"/>
    
      <category term="虚拟语气" scheme="http://sugar.yer.pub/tags/%E8%99%9A%E6%8B%9F%E8%AF%AD%E6%B0%94/"/>
    
  </entry>
  
  <entry>
    <title>python数据结构之二叉树(Binary tree)</title>
    <link href="http://sugar.yer.pub/2016/12/16/python%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E4%BA%8C%E5%8F%89%E6%A0%91-Binary-tree/"/>
    <id>http://sugar.yer.pub/2016/12/16/python数据结构之二叉树-Binary-tree/</id>
    <published>2016-12-16T02:37:36.000Z</published>
    <updated>2016-12-16T02:46:37.387Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据结构之二叉树"><a href="#数据结构之二叉树" class="headerlink" title="数据结构之二叉树"></a>数据结构之二叉树</h1><p>定义，参考自：<a href="https://zh.wikipedia.org/zh/二叉树" target="_blank" rel="external">维基百科-二叉树</a></p>
<p>特性：二元树是一个有根树，并且每个节点最多有2个子节点。非空的二叉树，若树叶总数为 n0，分支度为2的总数为 n2，则 n0 = n2 + 1。</p>
<p>如图：</p>
<p><img src="https://upload.wikimedia.org/wikipedia/commons/b/b1/BinaryTree_leaf.jpg" alt="二叉树"><br><a id="more"></a></p>
<h2 id="二叉树的实现"><a href="#二叉树的实现" class="headerlink" title="二叉树的实现"></a>二叉树的实现</h2>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;数据结构之二叉树&quot;&gt;&lt;a href=&quot;#数据结构之二叉树&quot; class=&quot;headerlink&quot; title=&quot;数据结构之二叉树&quot;&gt;&lt;/a&gt;数据结构之二叉树&lt;/h1&gt;&lt;p&gt;定义，参考自：&lt;a href=&quot;https://zh.wikipedia.org/zh/二叉树&quot;&gt;维基百科-二叉树&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;特性：二元树是一个有根树，并且每个节点最多有2个子节点。非空的二叉树，若树叶总数为 n0，分支度为2的总数为 n2，则 n0 = n2 + 1。&lt;/p&gt;
&lt;p&gt;如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/b/b1/BinaryTree_leaf.jpg&quot; alt=&quot;二叉树&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="数据结构" scheme="http://sugar.yer.pub/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="python" scheme="http://sugar.yer.pub/tags/python/"/>
    
      <category term="数据结构" scheme="http://sugar.yer.pub/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="二叉树" scheme="http://sugar.yer.pub/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>python设计模式之单例模式(singleton pattern)</title>
    <link href="http://sugar.yer.pub/2016/12/16/python%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F-singleton-pattern/"/>
    <id>http://sugar.yer.pub/2016/12/16/python设计模式之单例模式-singleton-pattern/</id>
    <published>2016-12-16T02:21:03.000Z</published>
    <updated>2016-12-16T02:21:38.374Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="python" scheme="http://sugar.yer.pub/categories/python/"/>
    
      <category term="设计模式" scheme="http://sugar.yer.pub/categories/python/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="python" scheme="http://sugar.yer.pub/tags/python/"/>
    
      <category term="单例" scheme="http://sugar.yer.pub/tags/%E5%8D%95%E4%BE%8B/"/>
    
      <category term="设计模式" scheme="http://sugar.yer.pub/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>python中的排序操作</title>
    <link href="http://sugar.yer.pub/2016/12/15/python%E4%B8%AD%E7%9A%84%E6%8E%92%E5%BA%8F%E6%93%8D%E4%BD%9C/"/>
    <id>http://sugar.yer.pub/2016/12/15/python中的排序操作/</id>
    <published>2016-12-15T10:25:11.000Z</published>
    <updated>2016-12-16T02:19:14.085Z</updated>
    
    <content type="html"><![CDATA[<h1 id="详细介绍python中的排序方法-sort-sorted"><a href="#详细介绍python中的排序方法-sort-sorted" class="headerlink" title="详细介绍python中的排序方法(sort, sorted)"></a>详细介绍python中的排序方法(sort, sorted)</h1><blockquote>
<p>排序操作在日常工作中会经常用到，这里把python的各类排序方法来具体说明</p>
</blockquote>
<a id="more"></a>
<p>本文整理自<a href="https://mozillazg.com/2013/03/python-sorting-how-to.html" target="_blank" rel="external">mozillazg’s Blog</a></p>
<p>英文原文为：<a href="https://wiki.python.org/moin/HowTo/Sorting/" target="_blank" rel="external">HowTo/Sorting</a>，可阅读原文</p>
<p>Python 内置的<code>sort()</code>方法可以实现对列表的原地排序功能。<br>内置的<code>sorted()</code>函数则不会修改原列表，而是生成一个经过排序的新列表。</p>
<p>下面总结一些常用的排序方法。</p>
<h3 id="基本排序"><a href="#基本排序" class="headerlink" title="基本排序"></a>基本排序</h3><h3 id="可选参数及高级用法"><a href="#可选参数及高级用法" class="headerlink" title="可选参数及高级用法"></a>可选参数及高级用法</h3><h4 id="keys"><a href="#keys" class="headerlink" title="keys"></a>keys</h4><h4 id="Operator"><a href="#Operator" class="headerlink" title="Operator"></a>Operator</h4><h4 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h4><h4 id="平衡（Stability）排序和复杂排序"><a href="#平衡（Stability）排序和复杂排序" class="headerlink" title="平衡（Stability）排序和复杂排序"></a>平衡（Stability）排序和复杂排序</h4><h4 id="根据多个参数无固定顺序排序"><a href="#根据多个参数无固定顺序排序" class="headerlink" title="根据多个参数无固定顺序排序"></a>根据多个参数无固定顺序排序</h4><h3 id="以前的实现方法"><a href="#以前的实现方法" class="headerlink" title="以前的实现方法"></a>以前的实现方法</h3><h4 id="cmp"><a href="#cmp" class="headerlink" title="cmp"></a>cmp</h4><h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;详细介绍python中的排序方法-sort-sorted&quot;&gt;&lt;a href=&quot;#详细介绍python中的排序方法-sort-sorted&quot; class=&quot;headerlink&quot; title=&quot;详细介绍python中的排序方法(sort, sorted)&quot;&gt;&lt;/a&gt;详细介绍python中的排序方法(sort, sorted)&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;排序操作在日常工作中会经常用到，这里把python的各类排序方法来具体说明&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="python" scheme="http://sugar.yer.pub/categories/python/"/>
    
    
      <category term="python" scheme="http://sugar.yer.pub/tags/python/"/>
    
      <category term="排序" scheme="http://sugar.yer.pub/tags/%E6%8E%92%E5%BA%8F/"/>
    
      <category term="sort" scheme="http://sugar.yer.pub/tags/sort/"/>
    
      <category term="sorted" scheme="http://sugar.yer.pub/tags/sorted/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://sugar.yer.pub/2016/12/14/hello-world/"/>
    <id>http://sugar.yer.pub/2016/12/14/hello-world/</id>
    <published>2016-12-14T07:33:22.796Z</published>
    <updated>2016-12-14T07:33:22.796Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
      <category term="helloworld" scheme="http://sugar.yer.pub/tags/helloworld/"/>
    
  </entry>
  
  <entry>
    <title>简单递归</title>
    <link href="http://sugar.yer.pub/2016/12/14/%E7%AE%80%E5%8D%95%E9%80%92%E5%BD%92/"/>
    <id>http://sugar.yer.pub/2016/12/14/简单递归/</id>
    <published>2016-12-14T02:57:29.000Z</published>
    <updated>2016-12-14T07:44:54.495Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一些简单功能的递归实现"><a href="#一些简单功能的递归实现" class="headerlink" title="一些简单功能的递归实现"></a>一些简单功能的递归实现</h1><h2 id="递归的实现原理"><a href="#递归的实现原理" class="headerlink" title="递归的实现原理"></a>递归的实现原理</h2><a id="more"></a>
<h2 id="计算列表长度，不限深度"><a href="#计算列表长度，不限深度" class="headerlink" title="计算列表长度，不限深度"></a>计算列表长度，不限深度</h2><p>如：有列表如下<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[[(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>), (<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>)],[(<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>), (<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>)]]</div></pre></td></tr></table></figure></p>
<p>实现方式：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_length</span><span class="params">(data)</span>:</span></div><div class="line">    length = <span class="number">0</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> data:</div><div class="line">        <span class="keyword">if</span> type(i) == list:</div><div class="line">            length += get_length(i)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            length += <span class="number">1</span></div><div class="line">    <span class="keyword">return</span> length</div></pre></td></tr></table></figure></p>
<h2 id="通过递归找出json中value值为链接"><a href="#通过递归找出json中value值为链接" class="headerlink" title="通过递归找出json中value值为链接"></a>通过递归找出json中value值为链接</h2>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一些简单功能的递归实现&quot;&gt;&lt;a href=&quot;#一些简单功能的递归实现&quot; class=&quot;headerlink&quot; title=&quot;一些简单功能的递归实现&quot;&gt;&lt;/a&gt;一些简单功能的递归实现&lt;/h1&gt;&lt;h2 id=&quot;递归的实现原理&quot;&gt;&lt;a href=&quot;#递归的实现原理&quot; class=&quot;headerlink&quot; title=&quot;递归的实现原理&quot;&gt;&lt;/a&gt;递归的实现原理&lt;/h2&gt;
    
    </summary>
    
      <category term="python" scheme="http://sugar.yer.pub/categories/python/"/>
    
    
      <category term="python" scheme="http://sugar.yer.pub/tags/python/"/>
    
      <category term="递归" scheme="http://sugar.yer.pub/tags/%E9%80%92%E5%BD%92/"/>
    
  </entry>
  
  <entry>
    <title>python风格指南</title>
    <link href="http://sugar.yer.pub/2016/12/13/python%E9%A3%8E%E6%A0%BC%E6%8C%87%E5%8D%97/"/>
    <id>http://sugar.yer.pub/2016/12/13/python风格指南/</id>
    <published>2016-12-13T07:35:16.000Z</published>
    <updated>2016-12-14T07:35:48.302Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote>
<p>有一个好的代码风格并且遵循规范还是很有必要的，这决定了你的代码能被多少人读懂。</p>
</blockquote>
<p><a href="http://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules/" target="_blank" rel="external">python风格规范</a><br><a id="more"></a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;有一个好的代码风格并且遵循规范还是很有必要的，这决定了你的代码能被多少人读懂。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules/&quot;&gt;python风格规范&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="http://sugar.yer.pub/categories/python/"/>
    
      <category term="标准" scheme="http://sugar.yer.pub/categories/python/%E6%A0%87%E5%87%86/"/>
    
    
      <category term="python" scheme="http://sugar.yer.pub/tags/python/"/>
    
      <category term="风格" scheme="http://sugar.yer.pub/tags/%E9%A3%8E%E6%A0%BC/"/>
    
  </entry>
  
  <entry>
    <title>M站UI自动化过程</title>
    <link href="http://sugar.yer.pub/2016/12/13/M%E7%AB%99UI%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%87%E7%A8%8B/"/>
    <id>http://sugar.yer.pub/2016/12/13/M站UI自动化过程/</id>
    <published>2016-12-13T03:37:13.000Z</published>
    <updated>2016-12-14T07:35:48.362Z</updated>
    
    <content type="html"><![CDATA[<h1 id="M站UI自动化过程"><a href="#M站UI自动化过程" class="headerlink" title="M站UI自动化过程"></a>M站UI自动化过程</h1><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><h4 id="安装python"><a href="#安装python" class="headerlink" title="安装python"></a>安装python</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">官网下载，linux与apple免安装</div></pre></td></tr></table></figure>
<h4 id="创建沙盒环境"><a href="#创建沙盒环境" class="headerlink" title="创建沙盒环境"></a>创建沙盒环境</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">virtualenv myvenv</div></pre></td></tr></table></figure>
<a id="more"></a>
<h4 id="切换沙盒环境"><a href="#切换沙盒环境" class="headerlink" title="切换沙盒环境"></a>切换沙盒环境</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source myvenv/bin/activate</div></pre></td></tr></table></figure>
<h4 id="安装selenium包"><a href="#安装selenium包" class="headerlink" title="安装selenium包"></a>安装selenium包</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install selenium</div></pre></td></tr></table></figure>
<h4 id="下载chromedriver，用来支持webdriver调用chrome"><a href="#下载chromedriver，用来支持webdriver调用chrome" class="headerlink" title="下载chromedriver，用来支持webdriver调用chrome"></a>下载chromedriver，用来支持webdriver调用chrome</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://chromedriver.storage.googleapis.com/2.22/chromedriver_linux64.zip</div></pre></td></tr></table></figure>
<h4 id="将chromedriver路径加入环境变量"><a href="#将chromedriver路径加入环境变量" class="headerlink" title="将chromedriver路径加入环境变量"></a>将chromedriver路径加入环境变量</h4><blockquote>
<p>windows和linux方式有所不同，请自行google。</p>
</blockquote>
<p><em>若不使用chrome的emulate devices，则不用执行关于selenium-server的步骤</em></p>
<h4 id="下载selenium-server服务，做remote服务，可启动chrome的mobile形式"><a href="#下载selenium-server服务，做remote服务，可启动chrome的mobile形式" class="headerlink" title="下载selenium-server服务，做remote服务，可启动chrome的mobile形式"></a>下载selenium-server服务，做remote服务，可启动chrome的mobile形式</h4><p>地址如下<br><a href="http://selenium-release.storage.googleapis.com/2.53/selenium-server-standalone-2.53.1.jar" target="_blank" rel="external">selenium-server</a></p>
<h3 id="remote服务启动"><a href="#remote服务启动" class="headerlink" title="remote服务启动"></a>remote服务启动</h3><h4 id="启动selenium-server服务"><a href="#启动selenium-server服务" class="headerlink" title="启动selenium-server服务"></a>启动selenium-server服务</h4><p>两种形式：</p>
<h5 id="通过脚本启动"><a href="#通过脚本启动" class="headerlink" title="通过脚本启动"></a>通过脚本启动</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gnome-terminal -t &quot;title-name&quot;gnome-terminal -x bash -c &quot;/usr/bin/java -jar /home/hanz/download/selenium-server-standalone-2.53.1.jar; exec bash;&quot;</div></pre></td></tr></table></figure>
<h5 id="直接终端启动"><a href="#直接终端启动" class="headerlink" title="直接终端启动"></a>直接终端启动</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/bin/java -jar /home/hanz/download/selenium-server-standalone-2.53.1.jar</div></pre></td></tr></table></figure>
<h4 id="脚本中启动chrome-mobile-emulation"><a href="#脚本中启动chrome-mobile-emulation" class="headerlink" title="脚本中启动chrome_mobile_emulation"></a>脚本中启动chrome_mobile_emulation</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">mobile_emulation = &#123;<span class="string">"deviceName"</span>: <span class="string">"Google Nexus 5"</span>&#125;</div><div class="line">chrome_options = webdriver.ChromeOptions()</div><div class="line">chrome_options.add_experimental_option(<span class="string">"mobileEmulation"</span>, mobile_emulation)</div><div class="line">self.driver = webdriver.Remote(command_executor=<span class="string">'http://127.0.0.1:4444/wd/hub'</span>,</div><div class="line">                               desired_capabilities=chrome_options.to_capabilities())</div></pre></td></tr></table></figure>
<h3 id="selenium-基本语法"><a href="#selenium-基本语法" class="headerlink" title="selenium 基本语法"></a>selenium 基本语法</h3><h4 id="网上有成熟的各路教程，请参考，在最后我附了一些简明的教程链接"><a href="#网上有成熟的各路教程，请参考，在最后我附了一些简明的教程链接" class="headerlink" title="网上有成熟的各路教程，请参考，在最后我附了一些简明的教程链接"></a>网上有成熟的各路教程，请参考，在最后我附了一些简明的教程链接</h4><h4 id="webdriver常用方法"><a href="#webdriver常用方法" class="headerlink" title="webdriver常用方法"></a>webdriver常用方法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="string">'add_cookie'</span>, 在当前的会话添加一个cookie</div><div class="line"></div><div class="line"><span class="string">'application_cache'</span>, 返回一个对象ApplicationCache与浏览器的应用程序缓存交互</div><div class="line"></div><div class="line"><span class="string">'back'</span>, 返回至上一个浏览历史</div><div class="line"></div><div class="line"><span class="string">'capabilities'</span>, remote参数</div><div class="line"></div><div class="line"><span class="string">'close'</span>, 关闭</div><div class="line"></div><div class="line"><span class="string">'command_executor'</span>, remote webdriver参数</div><div class="line"></div><div class="line"><span class="string">'create_options'</span>, chrome webdriver参数</div><div class="line"></div><div class="line"><span class="string">'create_web_element'</span>, 创建具有指定element_id网络元素。</div><div class="line"></div><div class="line"><span class="string">'current_url'</span>, 当前页面的url</div><div class="line"></div><div class="line"><span class="string">'current_window_handle'</span>, 返回当前窗口的句柄</div><div class="line"></div><div class="line"><span class="string">'delete_all_cookies'</span>, 删除所有Cookie会话的范围</div><div class="line"></div><div class="line"><span class="string">'delete_cookie'</span>,删除指定名称的单一的cookie。</div><div class="line"></div><div class="line"><span class="string">'desired_capabilities'</span>, 返回正在使用当前所需功能的驱动程序</div><div class="line"></div><div class="line"><span class="string">'error_handler'</span>, 用于处理错误errorhandler.ErrorHandler对象。</div><div class="line"></div><div class="line"><span class="string">'execute'</span>,  发送到由一个command.CommandExecutor要执行的命令。</div><div class="line"></div><div class="line"><span class="string">'execute_async_script'</span>,  异步执行当前窗口/帧的JavaScript。</div><div class="line"></div><div class="line"><span class="string">'execute_script'</span>, 同步地执行在当前窗口/帧的JavaScript。</div><div class="line"></div><div class="line"><span class="string">'file_detector'</span>,</div><div class="line"></div><div class="line"><span class="string">'file_detector_context'</span>,</div><div class="line"></div><div class="line"><span class="string">'find_element'</span>,</div><div class="line"></div><div class="line"><span class="string">'find_element_by_class_name'</span>,通过查找类名的元素。</div><div class="line"></div><div class="line"><span class="string">'find_element_by_css_selector'</span>,通过查找CSS选择器的元素。</div><div class="line"></div><div class="line"><span class="string">'find_element_by_id'</span>,通过ID查找元素。</div><div class="line"></div><div class="line"><span class="string">'find_element_by_link_text'</span>, 通过查找链接文本的元素。</div><div class="line"></div><div class="line"><span class="string">'find_element_by_name'</span>,通过名称查找元素。</div><div class="line"></div><div class="line"><span class="string">'find_element_by_partial_link_text'</span>,其链接文本的部分匹配查找元素。</div><div class="line"></div><div class="line"><span class="string">'find_element_by_tag_name'</span>,查找按标签名称的元素。</div><div class="line"></div><div class="line"><span class="string">'find_element_by_xpath'</span>,与XPath查找元素。</div><div class="line"></div><div class="line"><span class="string">'find_elements'</span>,</div><div class="line"></div><div class="line"><span class="string">'find_elements_by_class_name'</span>,</div><div class="line"></div><div class="line"><span class="string">'find_elements_by_css_selector'</span>,</div><div class="line"></div><div class="line"><span class="string">'find_elements_by_id'</span>,</div><div class="line"></div><div class="line"><span class="string">'find_elements_by_link_text'</span>,</div><div class="line"></div><div class="line"><span class="string">'find_elements_by_name'</span>,</div><div class="line"></div><div class="line"><span class="string">'find_elements_by_partial_link_text'</span>,</div><div class="line"></div><div class="line"><span class="string">'find_elements_by_tag_name'</span>,</div><div class="line"></div><div class="line"><span class="string">'find_elements_by_xpath'</span>,</div><div class="line"></div><div class="line"><span class="string">'forward'</span>,前进了一步在浏览器历史记录。</div><div class="line"></div><div class="line"><span class="string">'get'</span>, 加载在当前浏览器会话的网页。</div><div class="line"></div><div class="line"><span class="string">'get_cookie'</span>,按名称获取一个Cookie。如果找到，无如果不返回cookie。</div><div class="line"></div><div class="line"><span class="string">'get_cookies'</span>,返回一组词典，对应的cookie在当前会话中可见。</div><div class="line"></div><div class="line"><span class="string">'get_log'</span>,获取日志对于给定的日志类型</div><div class="line"></div><div class="line"><span class="string">'get_screenshot_as_base64'</span>,获取当前窗口的截图为Base64编码的字符串 这是在以HTML嵌入的图像是有用的。</div><div class="line"></div><div class="line"><span class="string">'get_screenshot_as_file'</span>,获取当前窗口的截图。如果返回FALSE 任何IO错误，否则返回<span class="keyword">True</span>。使用完整路径在你的文件名。</div><div class="line"></div><div class="line"><span class="string">'get_screenshot_as_png'</span>,获取当前窗口的屏幕快照作为二进制数据。</div><div class="line"></div><div class="line"><span class="string">'get_window_position'</span>,获取当前窗口的x，y位置。</div><div class="line"></div><div class="line"><span class="string">'get_window_size'</span>,获取当前窗口的宽度和高度。</div><div class="line"></div><div class="line"><span class="string">'implicitly_wait'</span>,用粘超时隐含等待被发现的元素， 或命令来完成。这种方法只需要调用每个会话一次</div><div class="line"></div><div class="line"><span class="string">'launch_app'</span>,</div><div class="line"></div><div class="line"><span class="string">'log_types'</span>,</div><div class="line"></div><div class="line"><span class="string">'maximize_window'</span>,最大限度地增加了的webdriver使用当前窗口</div><div class="line"></div><div class="line"><span class="string">'mobile'</span>,</div><div class="line"></div><div class="line"><span class="string">'name'</span>,返回此实例中的底层浏览器的名称。</div><div class="line"></div><div class="line"><span class="string">'orientation'</span>,获取设备的当前方位</div><div class="line"></div><div class="line"><span class="string">'page_source'</span>,获取当前页面的源代码。</div><div class="line"></div><div class="line"><span class="string">'quit'</span>, 关闭浏览器并关闭启动ChromeDriver时启动的ChromeDriver可执行</div><div class="line"></div><div class="line"><span class="string">'refresh'</span>, 刷新当前页面</div><div class="line"></div><div class="line"><span class="string">'save_screenshot'</span>,获取当前窗口的截图。如果返回FALSE 任何IO错误，否则返回<span class="keyword">True</span>。使用完整路径在你的文件名。</div><div class="line"></div><div class="line"><span class="string">'service'</span>,</div><div class="line"></div><div class="line"><span class="string">'session_id'</span>,浏览器会话的字符串ID开始，这个控制的webdriver。</div><div class="line"></div><div class="line"><span class="string">'set_page_load_timeout'</span>,设置的时间量，以等待一个页面加载完成 之前抛出一个错误。</div><div class="line"></div><div class="line"><span class="string">'set_script_timeout'</span>,</div><div class="line"></div><div class="line"><span class="string">'set_window_position'</span>,设置当前窗口的x，y位置。 （window.moveTo）</div><div class="line"></div><div class="line"><span class="string">'set_window_size'</span>,设置当前窗口的宽度和高度。 （window.resizeTo）</div><div class="line"></div><div class="line"><span class="string">'start_client'</span>,开始一个新的会话之前调用。这种方法可能会被改写定义自定义启动行为。</div><div class="line"></div><div class="line"><span class="string">'start_session'</span>,创建具有所需功能的一个新的会话。</div><div class="line"></div><div class="line"><span class="string">'stop_client'</span>,执行quit命令后调用。这种方法可能会被改写定义自定义关机行为。</div><div class="line"></div><div class="line"><span class="string">'switch_to'</span>,</div><div class="line"></div><div class="line"><span class="string">'switch_to_active_element'</span>,</div><div class="line"></div><div class="line"><span class="string">'switch_to_alert'</span>,切换当前活动的alert窗口</div><div class="line"></div><div class="line"><span class="string">'switch_to_default_content'</span>,</div><div class="line"></div><div class="line"><span class="string">'switch_to_frame'</span>,切换至当前活动的frame元素</div><div class="line"></div><div class="line"><span class="string">'switch_to_window'</span>,切换至当前活动的浏览器窗口</div><div class="line"></div><div class="line"><span class="string">'title'</span>,返回当前页面的标题。</div><div class="line"></div><div class="line"><span class="string">'window_handles'</span>返回当前会话中的所有窗口的句柄。</div></pre></td></tr></table></figure>
<h4 id="推荐文档"><a href="#推荐文档" class="headerlink" title="推荐文档"></a>推荐文档</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">英文:</div><div class="line">http://selenium-python.readthedocs.io/getting-started.html</div><div class="line"></div><div class="line">中文，我参与了翻译过程:</div><div class="line">http://selenium-python-zh.readthedocs.io/en/latest/</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;M站UI自动化过程&quot;&gt;&lt;a href=&quot;#M站UI自动化过程&quot; class=&quot;headerlink&quot; title=&quot;M站UI自动化过程&quot;&gt;&lt;/a&gt;M站UI自动化过程&lt;/h1&gt;&lt;h3 id=&quot;环境配置&quot;&gt;&lt;a href=&quot;#环境配置&quot; class=&quot;headerlink&quot; title=&quot;环境配置&quot;&gt;&lt;/a&gt;环境配置&lt;/h3&gt;&lt;h4 id=&quot;安装python&quot;&gt;&lt;a href=&quot;#安装python&quot; class=&quot;headerlink&quot; title=&quot;安装python&quot;&gt;&lt;/a&gt;安装python&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;官网下载，linux与apple免安装&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;创建沙盒环境&quot;&gt;&lt;a href=&quot;#创建沙盒环境&quot; class=&quot;headerlink&quot; title=&quot;创建沙盒环境&quot;&gt;&lt;/a&gt;创建沙盒环境&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;virtualenv myvenv&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="test" scheme="http://sugar.yer.pub/categories/test/"/>
    
      <category term="python" scheme="http://sugar.yer.pub/categories/test/python/"/>
    
    
      <category term="python" scheme="http://sugar.yer.pub/tags/python/"/>
    
      <category term="selenium" scheme="http://sugar.yer.pub/tags/selenium/"/>
    
      <category term="Remote" scheme="http://sugar.yer.pub/tags/Remote/"/>
    
      <category term="UI自动化" scheme="http://sugar.yer.pub/tags/UI%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>基于python环境的各类环境搭建</title>
    <link href="http://sugar.yer.pub/2016/12/12/%E5%9F%BA%E4%BA%8Epython%E7%8E%AF%E5%A2%83%E7%9A%84%E5%90%84%E7%B1%BB%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://sugar.yer.pub/2016/12/12/基于python环境的各类环境搭建/</id>
    <published>2016-12-12T08:01:13.000Z</published>
    <updated>2016-12-14T07:35:48.326Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基于python环境的各类环境搭建"><a href="#基于python环境的各类环境搭建" class="headerlink" title="基于python环境的各类环境搭建"></a>基于python环境的各类环境搭建</h1><h2 id="—服务类—"><a href="#—服务类—" class="headerlink" title="—服务类—"></a>—服务类—</h2><table>
<thead>
<tr>
<th style="text-align:left">序号</th>
<th style="text-align:left">功能</th>
<th style="text-align:left">作用</th>
<th style="text-align:left">状态</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">django跑起来</td>
<td style="text-align:left">站点</td>
<td style="text-align:left">完成</td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left">gunicorn跑起来</td>
<td style="text-align:left">内部分发服务</td>
<td style="text-align:left">完成</td>
</tr>
<tr>
<td style="text-align:left">3</td>
<td style="text-align:left">nginx跑起来</td>
<td style="text-align:left">静态外部服务器</td>
<td style="text-align:left">完成</td>
</tr>
<tr>
<td style="text-align:left">4</td>
<td style="text-align:left">supervisor跑起来</td>
<td style="text-align:left">任务监控</td>
<td style="text-align:left">完成</td>
</tr>
<tr>
<td style="text-align:left">5</td>
<td style="text-align:left">celery跑起来</td>
<td style="text-align:left">定时任务</td>
<td style="text-align:left">未完成</td>
</tr>
<tr>
<td style="text-align:left">6</td>
<td style="text-align:left">redis跑起来</td>
<td style="text-align:left">nosql快速缓存</td>
<td style="text-align:left">未完成</td>
</tr>
<tr>
<td style="text-align:left">-</td>
<td style="text-align:left">-</td>
<td style="text-align:left">-</td>
<td style="text-align:left">-</td>
</tr>
</tbody>
</table>
<p>|1|jenkins走起|testcase定时任务及结果|完成|</p>
<a id="more"></a>
<h2 id="—页面类—"><a href="#—页面类—" class="headerlink" title="—页面类—"></a>—页面类—</h2><table>
<thead>
<tr>
<th style="text-align:left">序号</th>
<th>功能</th>
<th>作用</th>
<th>状态</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td>前台页面做起来</td>
<td>把后台功能及数据展示做到前台页面上</td>
<td>部分完成</td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td>前台样式用起来</td>
<td>前台样式使用通用bootstrap样式包</td>
<td>未完成</td>
</tr>
<tr>
<td style="text-align:left">3</td>
<td>—</td>
<td>—</td>
<td>—</td>
</tr>
</tbody>
</table>
<h3 id="1-django跑起来"><a href="#1-django跑起来" class="headerlink" title="1. django跑起来"></a>1. django跑起来</h3><p>引用：</p>
<p>官方文档</p>
<h4 id="用到的功能："><a href="#用到的功能：" class="headerlink" title="用到的功能："></a>用到的功能：</h4><p>模板分页：</p>
<p><a href="https://mozillazg.com/2013/01/django-pagination-by-use-paginator.html" target="_blank" rel="external">https://mozillazg.com/2013/01/django-pagination-by-use-paginator.html</a></p>
<p><a href="http://python.usyiyi.cn/django/topics/pagination.html" target="_blank" rel="external">http://python.usyiyi.cn/django/topics/pagination.html</a></p>
<h3 id="2-gunicorn跑起来"><a href="#2-gunicorn跑起来" class="headerlink" title="2. gunicorn跑起来"></a>2. gunicorn跑起来</h3><p>引用：</p>
<p><a href="http://foofish.net/blog/18/django-deploy" target="_blank" rel="external">http://foofish.net/blog/18/django-deploy</a></p>
<p><a href="http://michal.karzynski.pl/blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/" target="_blank" rel="external">http://michal.karzynski.pl/blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/</a></p>
<h4 id="gunicorn超时时间设置"><a href="#gunicorn超时时间设置" class="headerlink" title="gunicorn超时时间设置"></a>gunicorn超时时间设置</h4><p>引用：</p>
<p><a href="http://stackoverflow.com/questions/6816215/gunicorn-nginx-timeout-problem" target="_blank" rel="external">http://stackoverflow.com/questions/6816215/gunicorn-nginx-timeout-problem</a></p>
<p>脚本文件bin/gunicorn_start.sh</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">NUM_WORKERS=<span class="number">3</span></div><div class="line">TIMEOUT=<span class="number">120</span></div><div class="line"></div><div class="line"><span class="keyword">exec</span> gunicorn $&#123;DJANGO_WSGI_MODULE&#125;:application \</div><div class="line">--name $NAME \</div><div class="line">--workers $NUM_WORKERS \</div><div class="line">--timeout $TIMEOUT \</div><div class="line">--log-level=debug \</div><div class="line">--bind=<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">9000</span> \</div><div class="line">--pid=$PIDFILE</div></pre></td></tr></table></figure>
<h3 id="3-nginx跑起来"><a href="#3-nginx跑起来" class="headerlink" title="3. nginx跑起来"></a>3. nginx跑起来</h3><p>引用：</p>
<p><a href="http://blog.csdn.net/qq_24861509/article/details/45727983" target="_blank" rel="external">http://blog.csdn.net/qq_24861509/article/details/45727983</a></p>
<p><a href="http://www.111cn.net/sys/linux/79751.htm" target="_blank" rel="external">http://www.111cn.net/sys/linux/79751.htm</a></p>
<h3 id="4-supervisor跑起来"><a href="#4-supervisor跑起来" class="headerlink" title="4. supervisor跑起来"></a>4. supervisor跑起来</h3><ul>
<li>安装</li>
</ul>
<p><code>sudo apt-get install supervisor</code></p>
<ul>
<li>启动</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">service supervisor start/restart/stop</div><div class="line"></div><div class="line">/etc/init.d/supervisor start/restart/stop</div></pre></td></tr></table></figure>
<ul>
<li>配置文件位置</li>
</ul>
<p><code>/etc/supervisor/supervisord.conf</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">; supervisor config file</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">[unix_http_server]</div><div class="line"></div><div class="line">#file=/var/run/supervisor.sock   ; (the path to the socket file)</div><div class="line"></div><div class="line">file=/tmp/supervisor.sock	;</div><div class="line"></div><div class="line">chmod=0700                       ; sockef file mode (default 0700)</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">[supervisord]</div><div class="line"></div><div class="line">logfile=/var/log/supervisor/supervisord.log ; (main log file;default $CWD/supervisord.log)</div><div class="line"></div><div class="line">pidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)</div><div class="line"></div><div class="line">childlogdir=/var/log/supervisor            ; (&apos;AUTO&apos; child log dir, default $TEMP)</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">; the below section must remain in the config file for RPC</div><div class="line"></div><div class="line">; (supervisorctl/web interface) to work, additional interfaces may be</div><div class="line"></div><div class="line">; added by defining them in separate rpcinterface: sections</div><div class="line"></div><div class="line">[rpcinterface:supervisor]</div><div class="line"></div><div class="line">supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">[supervisorctl]</div><div class="line"></div><div class="line">#serverurl=unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket</div><div class="line"></div><div class="line">serverurl=unix:///tmp/supervisor.sock ;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">; The [include] section can just contain the &quot;files&quot; setting.  This</div><div class="line"></div><div class="line">; setting can list multiple files (separated by whitespace or</div><div class="line"></div><div class="line">; newlines).  It can also contain wildcards.  The filenames are</div><div class="line"></div><div class="line">; interpreted as relative to this file.  Included files *cannot*</div><div class="line"></div><div class="line">; include files themselves.</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">[include]</div><div class="line"></div><div class="line">files = /etc/supervisor/conf.d/*.conf</div></pre></td></tr></table></figure>
<ul>
<li>增加任务</li>
</ul>
<p><code>/etc/supervisor/conf.d/autohome_celery.conf</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">[program:autohome_celery]</div><div class="line"></div><div class="line">directory = /home/hanz/workspace/PycharmProjects/autohome_data_site</div><div class="line"></div><div class="line">command = /home/hanz/workspace/my-venv2.7/bin/python manage.py celery worker -c 6 -l debug</div><div class="line"></div><div class="line">autostart=true</div><div class="line"></div><div class="line">autorestart=true</div><div class="line"></div><div class="line">startsecs=3</div><div class="line"></div><div class="line">user = hanz                                                          ;</div><div class="line"></div><div class="line">stdout_logfile = /home/hanz/workspace/PycharmProjects/autohome_data_site/logs/autohome_celery.log</div><div class="line"></div><div class="line">redirect_stderr = true</div></pre></td></tr></table></figure>
<ul>
<li>添加web显示页面</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">[inet_http_server]         ; inet (TCP) server disabled by default</div><div class="line"></div><div class="line">port=9001        ; (ip_address:port specifier, *:port for all iface)</div><div class="line"></div><div class="line">username=admin             ; (default is no username (open server))</div><div class="line"></div><div class="line">password=123               ; (default is no password (open server))</div></pre></td></tr></table></figure>
<p>引用：</p>
<p><a href="http://www.cnblogs.com/gsblog/p/3730293.html" target="_blank" rel="external">http://www.cnblogs.com/gsblog/p/3730293.html</a></p>
<p><a href="http://www.cnblogs.com/yjf512/archive/2012/03/05/2380496.html" target="_blank" rel="external">http://www.cnblogs.com/yjf512/archive/2012/03/05/2380496.html</a></p>
<p><a href="http://www.cnblogs.com/maseng/p/4670473.html" target="_blank" rel="external">http://www.cnblogs.com/maseng/p/4670473.html</a></p>
<p><a href="http://liyangliang.me/posts/2015/06/using-supervisor/" target="_blank" rel="external">http://liyangliang.me/posts/2015/06/using-supervisor/</a></p>
<h3 id="5-celery跑起来"><a href="#5-celery跑起来" class="headerlink" title="5. celery跑起来"></a>5. celery跑起来</h3><ul>
<li>独立celery+python脚本</li>
</ul>
<ul>
<li>django-celery替代celery，在django项目中的使用方法</li>
</ul>
<ul>
<li>监控界面：flower</li>
</ul>
<ol>
<li>安装：</li>
</ol>
<p><code>pip install flower</code></p>
<ol>
<li>使用方法：</li>
</ol>
<p>运行服务打开<a href="http://localhost:5555：" target="_blank" rel="external">http://localhost:5555：</a></p>
<p><code>flower --port=5555</code></p>
<p>或者从celery运行：</p>
<p><code>celery flower --address=127.0.0.1 --port=5555</code></p>
<p>Broker URL 和其他配置选项能够通过一个标准的celery选项：</p>
<p><code>celery flower --broker=amqp://guest:guest@localhost:5672//</code></p>
<p>在setting中添加：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">djcelery.setup_loader()</div><div class="line">CELERY_TIMEZONE = <span class="string">'Asia/Shanghai'</span></div><div class="line">BROKER_URL = <span class="string">'redis://127.0.0.1:6379/8'</span></div><div class="line">CELERY_RESULT_BACKEND = <span class="string">'redis://127.0.0.1:6379/9'</span></div><div class="line">CELERYBEAT_SCHEDULER = <span class="string">'djcelery.schedulers.DatabaseScheduler'</span></div><div class="line">CELERY_IMPORTS = (<span class="string">"apps.app1.tasks"</span>, <span class="string">"autohome.views"</span>)</div></pre></td></tr></table></figure>
<p>想要使用任务 ，一定要imports对应的py文件，修改后需要重启celery服务</p>
<p>引用：</p>
<p><a href="http://flower-docs-cn.readthedocs.io/zh/latest/install.html" target="_blank" rel="external">http://flower-docs-cn.readthedocs.io/zh/latest/install.html</a></p>
<p>-</p>
<p>引用：</p>
<blockquote>
<p><a href="http://www.celeryproject.org/" target="_blank" rel="external">http://www.celeryproject.org/</a><br><a href="http://www.liaoxuefeng.com/article/00137760323922531a8582c08814fb09e9930cede45e3cc000" target="_blank" rel="external">http://www.liaoxuefeng.com/article/00137760323922531a8582c08814fb09e9930cede45e3cc000</a><br><a href="http://www.jianshu.com/p/1840035cb510" target="_blank" rel="external">http://www.jianshu.com/p/1840035cb510</a><br><a href="http://www.dongwm.com/archives/how-to-use-celery/" target="_blank" rel="external">http://www.dongwm.com/archives/how-to-use-celery/</a><br><a href="http://liuzxc.github.io/blog/celery/" target="_blank" rel="external">http://liuzxc.github.io/blog/celery/</a><br><a href="http://opslinux.com/2015/09/22/celery%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%AE%9E%E8%B7%B5/" target="_blank" rel="external">http://opslinux.com/2015/09/22/celery%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%AE%9E%E8%B7%B5/</a><br><a href="http://blog.csdn.net/vintage_1/article/details/47664297" target="_blank" rel="external">http://blog.csdn.net/vintage_1/article/details/47664297</a></p>
</blockquote>
<p>django celery</p>
<blockquote>
<p><a href="http://blog.csdn.net/vintage_1/article/details/47664297" target="_blank" rel="external">http://blog.csdn.net/vintage_1/article/details/47664297</a><br><a href="http://maslino.website/post/celery-documentation-django.html" target="_blank" rel="external">http://maslino.website/post/celery-documentation-django.html</a></p>
</blockquote>
<h3 id="6-jenkins走起"><a href="#6-jenkins走起" class="headerlink" title="6. jenkins走起"></a>6. jenkins走起</h3><ul>
<li>jenkins 邮件配置</li>
</ul>
<p>引用：</p>
<blockquote>
<p><a href="http://www.cnblogs.com/amosli/p/3549918.html" target="_blank" rel="external">http://www.cnblogs.com/amosli/p/3549918.html</a><br><a href="http://www.cnblogs.com/GGHHLL/p/jenkins.html" target="_blank" rel="external">http://www.cnblogs.com/GGHHLL/p/jenkins.html</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基于python环境的各类环境搭建&quot;&gt;&lt;a href=&quot;#基于python环境的各类环境搭建&quot; class=&quot;headerlink&quot; title=&quot;基于python环境的各类环境搭建&quot;&gt;&lt;/a&gt;基于python环境的各类环境搭建&lt;/h1&gt;&lt;h2 id=&quot;—服务类—&quot;&gt;&lt;a href=&quot;#—服务类—&quot; class=&quot;headerlink&quot; title=&quot;—服务类—&quot;&gt;&lt;/a&gt;—服务类—&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;序号&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;功能&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;作用&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;状态&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;django跑起来&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;站点&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;完成&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;2&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;gunicorn跑起来&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;内部分发服务&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;完成&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;3&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;nginx跑起来&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;静态外部服务器&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;完成&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;4&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;supervisor跑起来&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;任务监控&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;完成&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;5&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;celery跑起来&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;定时任务&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;未完成&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;6&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;redis跑起来&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;nosql快速缓存&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;未完成&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;-&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;-&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;-&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;|1|jenkins走起|testcase定时任务及结果|完成|&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://sugar.yer.pub/categories/python/"/>
    
    
      <category term="python, gunicorn, django, supervisor, celery" scheme="http://sugar.yer.pub/tags/python-gunicorn-django-supervisor-celery/"/>
    
  </entry>
  
  <entry>
    <title>linux免密码认证配置</title>
    <link href="http://sugar.yer.pub/2016/12/12/linux%E5%85%8D%E5%AF%86%E7%A0%81%E8%AE%A4%E8%AF%81%E9%85%8D%E7%BD%AE/"/>
    <id>http://sugar.yer.pub/2016/12/12/linux免密码认证配置/</id>
    <published>2016-12-12T03:26:53.000Z</published>
    <updated>2016-12-14T07:35:48.274Z</updated>
    
    <content type="html"><![CDATA[<h1 id="服务器免密码认证"><a href="#服务器免密码认证" class="headerlink" title="服务器免密码认证"></a>服务器免密码认证</h1><hr>
<blockquote>
<p>配置过程很简单，但每次都忘记一些细节，故做个笔记</p>
</blockquote>
<a id="more"></a>
<h3 id="单向免密码登陆"><a href="#单向免密码登陆" class="headerlink" title="单向免密码登陆"></a>单向免密码登陆</h3><p>服务器A，PC机B。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;服务器免密码认证&quot;&gt;&lt;a href=&quot;#服务器免密码认证&quot; class=&quot;headerlink&quot; title=&quot;服务器免密码认证&quot;&gt;&lt;/a&gt;服务器免密码认证&lt;/h1&gt;&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;配置过程很简单，但每次都忘记一些细节，故做个笔记&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="server" scheme="http://sugar.yer.pub/categories/server/"/>
    
    
      <category term="linux, ubuntu, rsa认证" scheme="http://sugar.yer.pub/tags/linux-ubuntu-rsa%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>python中的文件读取</title>
    <link href="http://sugar.yer.pub/2016/12/11/python%E4%B8%AD%E7%9A%84%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96/"/>
    <id>http://sugar.yer.pub/2016/12/11/python中的文件读取/</id>
    <published>2016-12-10T18:40:29.000Z</published>
    <updated>2016-12-15T01:33:32.660Z</updated>
    
    <content type="html"><![CDATA[<h1 id="深入python中文件读取的各类方法"><a href="#深入python中文件读取的各类方法" class="headerlink" title="深入python中文件读取的各类方法"></a>深入python中文件读取的各类方法</h1><blockquote>
<p>参考<a href="http://www.pythondoc.com/pythontutorial3/index.html" target="_blank" rel="external">文档</a></p>
</blockquote>
<h2 id="基本方法"><a href="#基本方法" class="headerlink" title="基本方法"></a>基本方法</h2><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;深入python中文件读取的各类方法&quot;&gt;&lt;a href=&quot;#深入python中文件读取的各类方法&quot; class=&quot;headerlink&quot; title=&quot;深入python中文件读取的各类方法&quot;&gt;&lt;/a&gt;深入python中文件读取的各类方法&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;参考&lt;a href=&quot;http://www.pythondoc.com/pythontutorial3/index.html&quot;&gt;文档&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;基本方法&quot;&gt;&lt;a href=&quot;#基本方法&quot; class=&quot;headerlink&quot; title=&quot;基本方法&quot;&gt;&lt;/a&gt;基本方法&lt;/h2&gt;
    
    </summary>
    
      <category term="python" scheme="http://sugar.yer.pub/categories/python/"/>
    
    
      <category term="python, 文件, 读写" scheme="http://sugar.yer.pub/tags/python-%E6%96%87%E4%BB%B6-%E8%AF%BB%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title>居住证办理</title>
    <link href="http://sugar.yer.pub/2016/12/11/%E5%B1%85%E4%BD%8F%E8%AF%81%E5%8A%9E%E7%90%86/"/>
    <id>http://sugar.yer.pub/2016/12/11/居住证办理/</id>
    <published>2016-12-10T17:26:18.000Z</published>
    <updated>2016-12-14T07:35:48.250Z</updated>
    
    <content type="html"><![CDATA[<h1 id="居住证办理（原暂住证）"><a href="#居住证办理（原暂住证）" class="headerlink" title="居住证办理（原暂住证）"></a>居住证办理（原暂住证）</h1><p><a href="https://bjjzzpt.com/" target="_blank" rel="external">办理居住证传送门</a></p>
<p>今天周六，一大早就起来去预约的网点办理居住证，毕竟是去衙门口办事儿，不早点估计办不完。<br><a id="more"></a></p>
<h2 id="准备的材料"><a href="#准备的材料" class="headerlink" title="准备的材料"></a>准备的材料</h2><blockquote>
<p>对于材料的准备，前期准备还是挺充分的，网上也有相关的提示。<br>虽说有了申请网站，而且各种<br>提示相对于之前来说也很全面，但距离商业类的服务站点，还是差了不少。</p>
</blockquote>
<p>以网上预约办理居住证，条件选的是5年社保，说说需要准备哪些：</p>
<h3 id="身份证"><a href="#身份证" class="headerlink" title="身份证"></a>身份证</h3><p>没什么可说的，身份证必备，能证明真身的利器。</p>
<h3 id="半年内的社保个人权益记录"><a href="#半年内的社保个人权益记录" class="headerlink" title="半年内的社保个人权益记录"></a>半年内的社保个人权益记录</h3><p>去北京市社会保障服务平台申请，<a href="http://www.bjrbj.gov.cn/csibiz/home/" target="_blank" rel="external">传送门</a></p>
<p>登陆后在左树部分，选择个人权益记录 -&gt; 参保人缴费信息定制，从当前能选的最大月份往前推6个月即可。<br>时间选好点击提交请求，即可。</p>
<p>一般情况下，当天提交第二天才能出结果。</p>
<p>结果出来后打印这张单子。</p>
<h3 id="房租租赁合同（如果有房本，直接拿着房本）"><a href="#房租租赁合同（如果有房本，直接拿着房本）" class="headerlink" title="房租租赁合同（如果有房本，直接拿着房本）"></a>房租租赁合同（如果有房本，直接拿着房本）</h3><p>在有效期内的房屋租赁合同即可，清楚标明甲方乙方和租赁结束日期的。</p>
<blockquote>
<p>我办理的时候，还准备了其他的东西，比如照片、公司的劳动合同，保密协议什么的，全都拿着<br>结果是根本也用不上。</p>
</blockquote>
<h2 id="寻找办理点"><a href="#寻找办理点" class="headerlink" title="寻找办理点"></a>寻找办理点</h2><p>网约居住证受理网点，不是辖区派出所，一般都是社区的来京人员服务站，如果你不熟悉，还是不太好找的。<br>好在鼻子底下有张嘴，百度到附近，然后问下大爷大妈基本很快就能找到了。</p>
<h2 id="办理过程"><a href="#办理过程" class="headerlink" title="办理过程"></a>办理过程</h2><p>值得一提的是整个的办理过程，如果你拿着以上的文件，办理过程非常顺畅。</p>
<h3 id="扫描文件"><a href="#扫描文件" class="headerlink" title="扫描文件"></a>扫描文件</h3><p>会逐个的把你的身份证、权益记录、租房合同都用扫描仪扫描下来，不保留你任何的纸质文件。</p>
<h3 id="回执单"><a href="#回执单" class="headerlink" title="回执单"></a>回执单</h3><p>扫描完成后，会给你一张回执单，如果你网约的时候选的是EMS邮寄，则待15天左右即可；<br>如果是自取，需要到区域派出所领取。</p>
<blockquote>
<p>我就是选的EMS送，多方便啊，省得再请假了，人性化。</p>
</blockquote>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>北京取消暂住证换居住证，东西我觉得还是那个东西，只不过是换了个叫法而已。<br>如果想在北京买房买车，摇号，小孩上幼儿园，那么还是办一个吧，比较方便；<br>即便是你有工作居住证，也要办一个（据说是政策规定的）</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;居住证办理（原暂住证）&quot;&gt;&lt;a href=&quot;#居住证办理（原暂住证）&quot; class=&quot;headerlink&quot; title=&quot;居住证办理（原暂住证）&quot;&gt;&lt;/a&gt;居住证办理（原暂住证）&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://bjjzzpt.com/&quot;&gt;办理居住证传送门&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;今天周六，一大早就起来去预约的网点办理居住证，毕竟是去衙门口办事儿，不早点估计办不完。&lt;br&gt;
    
    </summary>
    
      <category term="life" scheme="http://sugar.yer.pub/categories/life/"/>
    
    
      <category term="北京工作居住证" scheme="http://sugar.yer.pub/tags/%E5%8C%97%E4%BA%AC%E5%B7%A5%E4%BD%9C%E5%B1%85%E4%BD%8F%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>talking about python unittest</title>
    <link href="http://sugar.yer.pub/2016/12/09/talking-about-python-unittest/"/>
    <id>http://sugar.yer.pub/2016/12/09/talking-about-python-unittest/</id>
    <published>2016-12-09T10:09:04.000Z</published>
    <updated>2016-12-14T07:35:48.238Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python-unittest-基础教程分享"><a href="#python-unittest-基础教程分享" class="headerlink" title="python unittest 基础教程分享"></a>python unittest 基础教程分享</h1><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;python-unittest-基础教程分享&quot;&gt;&lt;a href=&quot;#python-unittest-基础教程分享&quot; class=&quot;headerlink&quot; title=&quot;python unittest 基础教程分享&quot;&gt;&lt;/a&gt;python unittest 基础教程分享&lt;/h1&gt;
    
    </summary>
    
      <category term="python" scheme="http://sugar.yer.pub/categories/python/"/>
    
    
      <category term="python unittest test" scheme="http://sugar.yer.pub/tags/python-unittest-test/"/>
    
  </entry>
  
  <entry>
    <title>start-hexo</title>
    <link href="http://sugar.yer.pub/2016/12/09/start-hexo/"/>
    <id>http://sugar.yer.pub/2016/12/09/start-hexo/</id>
    <published>2016-12-09T01:40:20.000Z</published>
    <updated>2016-12-14T07:35:48.218Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HEXO"><a href="#HEXO" class="headerlink" title="HEXO"></a>HEXO</h1><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><blockquote>
<p>系统：ubuntu 16.04 64位</p>
</blockquote>
<h4 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install git</div></pre></td></tr></table></figure>
<h4 id="安装node"><a href="#安装node" class="headerlink" title="安装node"></a>安装node</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">curl <span class="_">-s</span>L https://deb.nodesource.com/setup_6.x | sudo -E bash -</div><div class="line"></div><div class="line">sudo apt-get install -y nodejs</div></pre></td></tr></table></figure>
<blockquote>
<p>不同系统安装node参见：<a href="https://nodejs.org/en/download/package-manager/" target="_blank" rel="external">这里</a></p>
</blockquote>
<a id="more"></a>
<h4 id="安装HEXO"><a href="#安装HEXO" class="headerlink" title="安装HEXO"></a>安装HEXO</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install hexo-cli -g</div><div class="line">npm install hexo --save</div></pre></td></tr></table></figure>
<blockquote>
<p>hexo官网很详细，见<a href="https://hexo.io/zh-cn/" target="_blank" rel="external">这里</a></p>
</blockquote>
<h2 id="至此，环境基本配置完毕。"><a href="#至此，环境基本配置完毕。" class="headerlink" title="至此，环境基本配置完毕。"></a>至此，环境基本配置完毕。</h2><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init myblog</div></pre></td></tr></table></figure>
<h2 id="教程参考："><a href="#教程参考：" class="headerlink" title="教程参考："></a>教程参考：</h2><blockquote>
<p><a href="http://theme-next.iissnan.com/" target="_blank" rel="external">官方教程</a><br><a href="http://jiji262.github.io/" target="_blank" rel="external">令狐葱</a></p>
<p><a href="http://zhiho.github.io/2015/09/29/hexo-next/" target="_blank" rel="external">Zhiho’s Blog</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;HEXO&quot;&gt;&lt;a href=&quot;#HEXO&quot; class=&quot;headerlink&quot; title=&quot;HEXO&quot;&gt;&lt;/a&gt;HEXO&lt;/h1&gt;&lt;h2 id=&quot;环境配置&quot;&gt;&lt;a href=&quot;#环境配置&quot; class=&quot;headerlink&quot; title=&quot;环境配置&quot;&gt;&lt;/a&gt;环境配置&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;系统：ubuntu 16.04 64位&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;安装git&quot;&gt;&lt;a href=&quot;#安装git&quot; class=&quot;headerlink&quot; title=&quot;安装git&quot;&gt;&lt;/a&gt;安装git&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo apt-get install git&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;安装node&quot;&gt;&lt;a href=&quot;#安装node&quot; class=&quot;headerlink&quot; title=&quot;安装node&quot;&gt;&lt;/a&gt;安装node&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl &lt;span class=&quot;_&quot;&gt;-s&lt;/span&gt;L https://deb.nodesource.com/setup_6.x | sudo -E bash -&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sudo apt-get install -y nodejs&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;不同系统安装node参见：&lt;a href=&quot;https://nodejs.org/en/download/package-manager/&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>python process control cycle: While and For</title>
    <link href="http://sugar.yer.pub/2016/12/09/python-process-control-cycle-While-and-For/"/>
    <id>http://sugar.yer.pub/2016/12/09/python-process-control-cycle-While-and-For/</id>
    <published>2016-12-08T22:22:48.000Z</published>
    <updated>2016-12-14T07:35:48.350Z</updated>
    
    <content type="html"><![CDATA[<h1 id="循环（迭代器与生成器）的那点事"><a href="#循环（迭代器与生成器）的那点事" class="headerlink" title="循环（迭代器与生成器）的那点事"></a>循环（迭代器与生成器）的那点事</h1><h2 id="while"><a href="#while" class="headerlink" title="while"></a>while</h2><ul>
<li>while 执行时的基本流程图</li>
</ul>
<p><img src="http://oi1wvrjc2.bkt.clouddn.com/while.png" alt="image" title="while流程图"></p>
<a id="more"></a>
<blockquote>
<p>while语句的基本格式</p>
</blockquote>
<p>其中<exception>为对参数或表达式取布尔值，即：bool(<exception>)，结果只有两种，True和False</exception></exception></p>
<p>如下：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">while</span> &lt;exception&gt;:</div><div class="line">    &lt;suite&gt;</div><div class="line">    &lt;<span class="keyword">break</span>&gt;</div><div class="line"><span class="keyword">else</span>:</div><div class="line">    &lt;suite&gt;</div></pre></td></tr></table></figure>
<blockquote>
<p>tips:</p>
</blockquote>
<p>讲述一下bool值：</p>
<ol>
<li><p>在数值上下文环境中，True被当作1, False被当作0；如True+2 =&gt; 3, int(True) =&gt; 1</p>
</li>
<li><p>其他类型值转换bool值时，除了’’, “”, “”””, 0, (), [], {}, None, 0.0, 0L, 0.0+0.0j, False值为Faluse，其他的都为True；例如：bool(-1) =&gt; True</p>
</li>
</ol>
<hr>
<ul>
<li>while表达式中的break，指跳出最近的所在的循环；一般为满足条件后跳出，以防止死循环； </li>
</ul>
<p>举例：猜字游戏</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">guess</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        input_seed = raw_input(<span class="string">"please input the seed:"</span>)</div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            seed = int(input_seed)</div><div class="line">            <span class="keyword">if</span> seed == <span class="number">11</span>:</div><div class="line">                print(<span class="string">"congretulations to you!"</span>)</div><div class="line">                <span class="keyword">break</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                print(<span class="string">"guess again!"</span>)</div><div class="line">        <span class="keyword">except</span> ValueError:</div><div class="line">            print(<span class="string">"please input int type"</span>)</div><div class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</div><div class="line">            print(e)</div></pre></td></tr></table></figure>
<ul>
<li>else为可选部分，当控制权离开循环而又没有碰到break语句时，就会执行else中的语句；</li>
</ul>
<p>[注意：当第一次判断while循环条件时就不满足时，即一次循环也没有执行时，还是会执行else语句的]</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">func1</span><span class="params">()</span>:</span></div><div class="line">    keys = <span class="string">"goodjob"</span></div><div class="line">    <span class="keyword">while</span> keys:</div><div class="line">        print(keys)</div><div class="line">        keys = keys[<span class="number">1</span>:]</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        print(<span class="string">"done"</span>)</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">func3</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">while</span> <span class="keyword">False</span>:</div><div class="line">        print(<span class="string">"false"</span>)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        print(<span class="string">"the end"</span>)</div></pre></td></tr></table></figure>
<ul>
<li>break, continue和pass</li>
</ul>
<blockquote>
<p>break: 跳出最近所在的循环 （指跳出整个循环）</p>
</blockquote>
<p>continue: 立即跳到循环的顶端，即跳过本次循环，执行下一次循环</p>
<p>pass: 占位语句，无实际作用</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">a = <span class="number">10</span></div><div class="line">b = <span class="number">0</span></div><div class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">    <span class="keyword">if</span> a == <span class="number">1</span>: <span class="keyword">break</span></div><div class="line">    b += <span class="number">1</span></div><div class="line">    print(<span class="string">"b="</span>,b)</div><div class="line">    <span class="keyword">if</span> b == <span class="number">100</span>: <span class="keyword">break</span></div><div class="line">    <span class="keyword">if</span> a == <span class="number">3</span>: <span class="keyword">continue</span></div><div class="line">    a -= <span class="number">1</span></div><div class="line">    print(<span class="string">"a="</span>,a)</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">func2</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        <span class="keyword">pass</span></div></pre></td></tr></table></figure>
<hr>
<h2 id="for"><a href="#for" class="headerlink" title="for"></a>for</h2><blockquote>
<p>for语句的基本格式和一般用法</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> &lt;target&gt; <span class="keyword">in</span> &lt;object&gt;:</div><div class="line">    &lt;suite1&gt;</div><div class="line"><span class="keyword">else</span>:</div><div class="line">    &lt;suite2&gt;</div></pre></td></tr></table></figure>
<blockquote>
<p>执行方式</p>
</blockquote>
<p>当运行for循环时，会将序列对象中的元素逐个赋值给目标，然后为每个元素执行循环主体。</p>
<hr>
<ul>
<li>for循环也有break, continue和else子句</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> &lt;target&gt; <span class="keyword">in</span> &lt;object&gt;:</div><div class="line">    &lt;suite1&gt;</div><div class="line">    <span class="keyword">if</span> &lt;test&gt;: <span class="keyword">break</span></div><div class="line">    <span class="keyword">if</span> &lt;test&gt;: contiune</div><div class="line"><span class="keyword">else</span>:</div><div class="line">    &lt;suite2&gt;</div></pre></td></tr></table></figure>
<ul>
<li>基本用法 </li>
</ul>
<blockquote>
<p>求1-10之和，之积</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">func4</span><span class="params">()</span>:</span></div><div class="line">    h = <span class="number">0</span></div><div class="line">    j = <span class="number">1</span></div><div class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> xrange(<span class="number">1</span>,<span class="number">11</span>):</div><div class="line">        h += x</div><div class="line">        j *= x</div><div class="line">    <span class="keyword">print</span> h, j</div></pre></td></tr></table></figure>
<ul>
<li>for中的元组赋值</li>
</ul>
<p>若对应列表中的元组进行赋值，则可看做对元组的解包运算；</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">func5</span><span class="params">()</span>:</span></div><div class="line">    T = [(<span class="number">1</span>,<span class="number">2</span>),(<span class="number">3</span>,<span class="number">4</span>),(<span class="number">5</span>,<span class="number">6</span>)]</div><div class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> T:</div><div class="line">        <span class="keyword">print</span> x</div><div class="line">    <span class="keyword">for</span> x, y <span class="keyword">in</span> T:</div><div class="line">        print(x,<span class="string">"=&gt;"</span>,y)</div></pre></td></tr></table></figure>
<ul>
<li>结合items操作字典</li>
</ul>
<p>for 循环中的元组使得用items方法来遍历字典中的键和值变得很方便，而不必再遍历键并手动索引以获取值</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">func6</span><span class="params">()</span>:</span></div><div class="line">    D = &#123;<span class="string">'a'</span>:<span class="number">1</span>,<span class="string">'b'</span>:<span class="number">2</span>,<span class="string">'c'</span>:<span class="number">3</span>&#125;</div><div class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> D:</div><div class="line">        <span class="keyword">print</span> x</div><div class="line">    <span class="keyword">for</span> x, y <span class="keyword">in</span> D.items():</div><div class="line">        print(x,<span class="string">"=&gt;"</span>,y)</div></pre></td></tr></table></figure>
<ul>
<li>多重for循环</li>
</ul>
<p>注意：else是第二层循环中的子句，而非if的子句</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">func7</span><span class="params">()</span>:</span></div><div class="line">    items = [<span class="string">'aaa'</span>,<span class="number">111</span>,(<span class="number">4</span>,<span class="number">5</span>),<span class="number">2.01</span>]</div><div class="line">    tests = [(<span class="number">4</span>,<span class="number">5</span>),<span class="number">3.14</span>]</div><div class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> tests:</div><div class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> items:</div><div class="line">            <span class="keyword">if</span> key == item:</div><div class="line">                print(key, <span class="string">"was found"</span>)</div><div class="line">                <span class="keyword">break</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            print(key, <span class="string">"not found"</span>)</div></pre></td></tr></table></figure>
<ul>
<li>常用range搭配，来做循环计数器和索引</li>
</ul>
<blockquote>
<p>range，python2.7为生成list，python3.*与xrange合并，均变为生成可迭代的对象；</p>
</blockquote>
<p>简单说区别：生成可迭代对象比生成list速度更快，占用内存更小，在大数据量情况下非常有效。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">list(range(<span class="number">-5</span>,<span class="number">5</span>))</div><div class="line">&gt;&gt; [<span class="number">-5</span>, <span class="number">-4</span>, <span class="number">-3</span>, <span class="number">-2</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</div><div class="line">list(range(<span class="number">5</span>,<span class="number">-5</span>,<span class="number">-2</span>))</div><div class="line">&gt;&gt; [<span class="number">5</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">-3</span>]</div></pre></td></tr></table></figure>
<ul>
<li>利用range进行索引，可以通过控制range来实现特殊的遍历，例如，可跳过一些元素</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">S = <span class="string">'abcdefghijklmn'</span></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(S), <span class="number">2</span>): <span class="keyword">print</span> S[i],</div><div class="line">&gt;&gt; a c e g i k m</div></pre></td></tr></table></figure>
<blockquote>
<p>扩展：其他的跳过元素的方式，运用切片技术，如需要可详细了解：</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> item <span class="keyword">in</span> S[::<span class="number">2</span>]:<span class="keyword">print</span> item,</div><div class="line">&gt;&gt; a c e g i k m</div></pre></td></tr></table></figure>
<ul>
<li>并行遍历</li>
</ul>
<p>对两组列表进行并行遍历</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">func9</span><span class="params">()</span>:</span></div><div class="line">    a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</div><div class="line">    b = [<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">44</span>]</div><div class="line">    c = zip(a,b)</div><div class="line">    <span class="keyword">print</span> type(c)</div><div class="line">    <span class="keyword">print</span> c</div><div class="line">    <span class="keyword">for</span> m, n <span class="keyword">in</span> c:</div><div class="line">        <span class="keyword">print</span> m,<span class="string">"+"</span>,n,<span class="string">"="</span>,m+n</div><div class="line">&gt;&gt;</div><div class="line">&lt;type <span class="string">'list'</span>&gt;</div><div class="line">[(<span class="number">1</span>, <span class="number">11</span>), (<span class="number">2</span>, <span class="number">22</span>), (<span class="number">3</span>, <span class="number">33</span>), (<span class="number">4</span>, <span class="number">44</span>)]</div><div class="line"><span class="number">1</span> + <span class="number">11</span> = <span class="number">12</span></div><div class="line"><span class="number">2</span> + <span class="number">22</span> = <span class="number">24</span></div><div class="line"><span class="number">3</span> + <span class="number">33</span> = <span class="number">36</span></div><div class="line"><span class="number">4</span> + <span class="number">44</span> = <span class="number">48</span></div></pre></td></tr></table></figure>
<blockquote>
<p>扩展：zip和range一样，2.×时代生成为list，3.×时代均为可迭代对象；</p>
</blockquote>
<hr>
<ul>
<li>产生偏移和元素: enumerate</li>
</ul>
<p>有时可能会有这种需求，查看迭代的元素所在的位置，可以这样实现</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">func10</span><span class="params">()</span>:</span></div><div class="line">    a = <span class="string">"abcdefg"</span></div><div class="line">    j = <span class="number">0</span></div><div class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> a:</div><div class="line">        <span class="keyword">print</span> x, <span class="string">"offset is "</span>,j</div><div class="line">        j += <span class="number">1</span></div><div class="line">&gt;&gt;&gt;</div><div class="line">a offset <span class="keyword">is</span>  <span class="number">0</span></div><div class="line">b offset <span class="keyword">is</span>  <span class="number">1</span></div><div class="line">c offset <span class="keyword">is</span>  <span class="number">2</span></div><div class="line">d offset <span class="keyword">is</span>  <span class="number">3</span></div><div class="line">e offset <span class="keyword">is</span>  <span class="number">4</span></div><div class="line">f offset <span class="keyword">is</span>  <span class="number">5</span></div><div class="line">g offset <span class="keyword">is</span>  <span class="number">6</span></div></pre></td></tr></table></figure>
<p>但内置函数enumerate可以帮我们做</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">func11</span><span class="params">()</span>:</span></div><div class="line">    a = <span class="string">"abcdefg"</span></div><div class="line">    j = <span class="number">0</span></div><div class="line">    <span class="keyword">for</span> m, n <span class="keyword">in</span> enumerate(a):</div><div class="line">        <span class="keyword">print</span> n, <span class="string">"offset is --"</span>, m</div></pre></td></tr></table></figure>
<h2 id="列表推导"><a href="#列表推导" class="headerlink" title="列表推导"></a>列表推导</h2><blockquote>
<p>列表推导式为从序列中创建列表提供了一个简单的方法。</p>
</blockquote>
<h3 id="普通创建列表方式"><a href="#普通创建列表方式" class="headerlink" title="普通创建列表方式"></a>普通创建列表方式</h3><p>我们可以像这样创建一个普通的列表，像这样：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">testlist = []</div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>):</div><div class="line">    testlist.append(x**<span class="number">2</span>)</div><div class="line"></div><div class="line"><span class="keyword">print</span> testlist</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>[<span class="number">0</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>, <span class="number">36</span>, <span class="number">49</span>, <span class="number">64</span>, <span class="number">81</span>]</div></pre></td></tr></table></figure></p>
<p>通过上面的程序可以发现，通过for循环中被创建的名为x的变量在循环完毕后，依然存在。<br>如果想完成上面的功能，且不会产生其他的副作用，可以使用lambda来创建：</p>
<h3 id="通过lambda表达式来创建"><a href="#通过lambda表达式来创建" class="headerlink" title="通过lambda表达式来创建"></a>通过lambda表达式来创建</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">testlist = list(map(<span class="keyword">lambda</span> x: x**<span class="number">2</span>, range(<span class="number">10</span>)))</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>[<span class="number">0</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>, <span class="number">36</span>, <span class="number">49</span>, <span class="number">64</span>, <span class="number">81</span>]</div></pre></td></tr></table></figure>
<p>还有一种更加易读的创建方式：</p>
<h3 id="通过列表推导创建"><a href="#通过列表推导创建" class="headerlink" title="通过列表推导创建"></a>通过列表推导创建</h3><h4 id="基本列表推导式"><a href="#基本列表推导式" class="headerlink" title="基本列表推导式"></a>基本列表推导式</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">testlist = [x**<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>)]</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>[<span class="number">0</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>, <span class="number">36</span>, <span class="number">49</span>, <span class="number">64</span>, <span class="number">81</span>]</div></pre></td></tr></table></figure>
<p>这种方式更加易读，且创建起列表来得心应手。<br>下面我们来看看，它是如何来创建的，即它的格式是什么。</p>
<blockquote>
<p>列表推导式由包含一个表达式的括号组成，表达式后面跟随一个 for 子句，<br>之后可以有零或多个 for 或 if 子句。结果是一个列表，<br>由表达式依据其后面的 for 和 if 子句上下文计算而来的结果构成。</p>
</blockquote>
<p>等同于：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">testlist = []</div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>):</div><div class="line">    testlist.append(x**<span class="number">2</span>)</div><div class="line"></div><div class="line">testlist</div><div class="line"></div><div class="line">&gt;&gt;&gt;[<span class="number">0</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>, <span class="number">36</span>, <span class="number">49</span>, <span class="number">64</span>, <span class="number">81</span>]</div></pre></td></tr></table></figure></p>
<h4 id="带控制流程的列表推导"><a href="#带控制流程的列表推导" class="headerlink" title="带控制流程的列表推导"></a>带控制流程的列表推导</h4><p>来具体看个例子：<br>双重循环加判断：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[(x, y) <span class="keyword">for</span> x <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] <span class="keyword">for</span> y <span class="keyword">in</span> [<span class="number">3</span>,<span class="number">1</span>,<span class="number">5</span>] <span class="keyword">if</span> x != y ]</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>[(<span class="number">1</span>, <span class="number">3</span>), (<span class="number">1</span>, <span class="number">5</span>), (<span class="number">2</span>, <span class="number">3</span>), (<span class="number">2</span>, <span class="number">1</span>), (<span class="number">2</span>, <span class="number">5</span>), (<span class="number">3</span>, <span class="number">1</span>), (<span class="number">3</span>, <span class="number">5</span>)]</div></pre></td></tr></table></figure></p>
<p>如果看起来太复杂，那么变成常规的语法来看看：<br>上面的等同于：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">testlist = []</div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]:</div><div class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> [<span class="number">3</span>,<span class="number">1</span>,<span class="number">5</span>]:</div><div class="line">        <span class="keyword">if</span> x != y:</div><div class="line">            testlist.append((x, y))</div><div class="line"></div><div class="line">testlist</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>[(<span class="number">1</span>, <span class="number">3</span>), (<span class="number">1</span>, <span class="number">5</span>), (<span class="number">2</span>, <span class="number">3</span>), (<span class="number">2</span>, <span class="number">1</span>), (<span class="number">2</span>, <span class="number">5</span>), (<span class="number">3</span>, <span class="number">1</span>), (<span class="number">3</span>, <span class="number">5</span>)]</div></pre></td></tr></table></figure></p>
<p>注意下上面的for 和if语句的顺序。</p>
<h4 id="嵌套的列表推导式"><a href="#嵌套的列表推导式" class="headerlink" title="嵌套的列表推导式"></a>嵌套的列表推导式</h4><p>列表解析中的第一个表达式可以是任何表达式，包括列表解析。</p>
<p>再看一个例子：<br>有一个长度为4的列表组成的3×4的矩阵，如果想要交换行列，应如何操作？<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">testlist = [</div><div class="line">    [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>],</div><div class="line">    [<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>],</div><div class="line">    [<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>],</div><div class="line">]</div></pre></td></tr></table></figure></p>
<h5 id="普通方式："><a href="#普通方式：" class="headerlink" title="普通方式："></a>普通方式：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">result = []</div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">4</span>):</div><div class="line">    bb = []</div><div class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> testlist:</div><div class="line">        bb.append(y[x])</div><div class="line">    result.append(bb)</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>[[<span class="number">1</span>, <span class="number">5</span>, <span class="number">9</span>], [<span class="number">2</span>, <span class="number">6</span>, <span class="number">10</span>], [<span class="number">3</span>, <span class="number">7</span>, <span class="number">11</span>], [<span class="number">4</span>, <span class="number">8</span>, <span class="number">12</span>]]</div></pre></td></tr></table></figure>
<h5 id="一层列表推导："><a href="#一层列表推导：" class="headerlink" title="一层列表推导："></a>一层列表推导：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">result = []</div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">4</span>):</div><div class="line">    result.append([row[i] <span class="keyword">for</span> i <span class="keyword">in</span> testlist])</div><div class="line"></div><div class="line">result</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>[[<span class="number">1</span>, <span class="number">5</span>, <span class="number">9</span>], [<span class="number">2</span>, <span class="number">6</span>, <span class="number">10</span>], [<span class="number">3</span>, <span class="number">7</span>, <span class="number">11</span>], [<span class="number">4</span>, <span class="number">8</span>, <span class="number">12</span>]]</div></pre></td></tr></table></figure>
<h5 id="双层列表推导"><a href="#双层列表推导" class="headerlink" title="双层列表推导"></a>双层列表推导</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[[y[x] <span class="keyword">for</span> y <span class="keyword">in</span> testlist] <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">4</span>)]</div></pre></td></tr></table></figure>
<h5 id="内置函数处理"><a href="#内置函数处理" class="headerlink" title="内置函数处理"></a>内置函数处理</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">list(zip(*testlist))</div></pre></td></tr></table></figure>
<p>上次讲过一点zip的功能，这里的*号为参数列表的分拆，等同于：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</div><div class="line">b = [<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>]</div><div class="line">c = [<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>]</div><div class="line">tt = zip(a,b,c)</div><div class="line">result = list(tt)</div></pre></td></tr></table></figure></p>
<h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><p>自己偿试将上次的food.py中的循环判断语句，使用列表表达式的方式进行处理</p>
<p>用自己的话来说一遍：<br>把最终要处理的表达式提在最前面，把循环语句放在后面；循环语句与判断语句按顺序依次排列。<br>每一层中扩号都执行了一次append操作。</p>
<h2 id="文件迭代器"><a href="#文件迭代器" class="headerlink" title="文件迭代器"></a>文件迭代器</h2><h3 id="文件读取方法大集合"><a href="#文件读取方法大集合" class="headerlink" title="文件读取方法大集合"></a>文件读取方法大集合</h3><ul>
<li>基本读取文件方法</li>
</ul>
<ul>
<li>with的用法</li>
</ul>
<h2 id="生成器-generator"><a href="#生成器-generator" class="headerlink" title="生成器-generator"></a>生成器-generator</h2><p>yield</p>
<h2 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h2>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;循环（迭代器与生成器）的那点事&quot;&gt;&lt;a href=&quot;#循环（迭代器与生成器）的那点事&quot; class=&quot;headerlink&quot; title=&quot;循环（迭代器与生成器）的那点事&quot;&gt;&lt;/a&gt;循环（迭代器与生成器）的那点事&lt;/h1&gt;&lt;h2 id=&quot;while&quot;&gt;&lt;a href=&quot;#while&quot; class=&quot;headerlink&quot; title=&quot;while&quot;&gt;&lt;/a&gt;while&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;while 执行时的基本流程图&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://oi1wvrjc2.bkt.clouddn.com/while.png&quot; alt=&quot;image&quot; title=&quot;while流程图&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://sugar.yer.pub/categories/python/"/>
    
    
      <category term="python, 迭代" scheme="http://sugar.yer.pub/tags/python-%E8%BF%AD%E4%BB%A3/"/>
    
  </entry>
  
  <entry>
    <title>New World!</title>
    <link href="http://sugar.yer.pub/2016/12/09/New-World/"/>
    <id>http://sugar.yer.pub/2016/12/09/New-World/</id>
    <published>2016-12-08T21:43:00.000Z</published>
    <updated>2016-12-12T11:44:17.085Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
</feed>
