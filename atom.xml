<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Run! Sugar,Run!</title>
  <subtitle>If you are ever in trouble, don&#39;t try to be brave, just run, just run away.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://sugar.yer.pub/"/>
  <updated>2016-12-12T11:44:19.509Z</updated>
  <id>http://sugar.yer.pub/</id>
  
  <author>
    <name>Ouroporos</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://sugar.yer.pub/2016/12/12/hello-world/"/>
    <id>http://sugar.yer.pub/2016/12/12/hello-world/</id>
    <published>2016-12-12T11:44:19.513Z</published>
    <updated>2016-12-12T11:44:19.509Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
      <category term="helloworld" scheme="http://sugar.yer.pub/tags/helloworld/"/>
    
  </entry>
  
  <entry>
    <title>基于python环境的各类环境搭建</title>
    <link href="http://sugar.yer.pub/2016/12/12/%E5%9F%BA%E4%BA%8Epython%E7%8E%AF%E5%A2%83%E7%9A%84%E5%90%84%E7%B1%BB%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://sugar.yer.pub/2016/12/12/基于python环境的各类环境搭建/</id>
    <published>2016-12-12T08:01:13.000Z</published>
    <updated>2016-12-13T03:28:32.317Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基于python环境的各类环境搭建"><a href="#基于python环境的各类环境搭建" class="headerlink" title="基于python环境的各类环境搭建"></a>基于python环境的各类环境搭建</h1><h2 id="—服务类—"><a href="#—服务类—" class="headerlink" title="—服务类—"></a>—服务类—</h2><table>
<thead>
<tr>
<th style="text-align:left">序号</th>
<th style="text-align:left">功能</th>
<th style="text-align:left">作用</th>
<th style="text-align:left">状态</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">django跑起来</td>
<td style="text-align:left">站点</td>
<td style="text-align:left">完成</td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left">gunicorn跑起来</td>
<td style="text-align:left">内部分发服务</td>
<td style="text-align:left">完成</td>
</tr>
<tr>
<td style="text-align:left">3</td>
<td style="text-align:left">nginx跑起来</td>
<td style="text-align:left">静态外部服务器</td>
<td style="text-align:left">完成</td>
</tr>
<tr>
<td style="text-align:left">4</td>
<td style="text-align:left">supervisor跑起来</td>
<td style="text-align:left">任务监控</td>
<td style="text-align:left">完成</td>
</tr>
<tr>
<td style="text-align:left">5</td>
<td style="text-align:left">celery跑起来</td>
<td style="text-align:left">定时任务</td>
<td style="text-align:left">未完成</td>
</tr>
<tr>
<td style="text-align:left">6</td>
<td style="text-align:left">redis跑起来</td>
<td style="text-align:left">nosql快速缓存</td>
<td style="text-align:left">未完成</td>
</tr>
<tr>
<td style="text-align:left">-</td>
<td style="text-align:left">-</td>
<td style="text-align:left">-</td>
<td style="text-align:left">-</td>
</tr>
</tbody>
</table>
<p>|1|jenkins走起|testcase定时任务及结果|完成|</p>
<h2 id="—页面类—"><a href="#—页面类—" class="headerlink" title="—页面类—"></a>—页面类—</h2><table>
<thead>
<tr>
<th style="text-align:left">序号</th>
<th>功能</th>
<th>作用</th>
<th>状态</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td>前台页面做起来</td>
<td>把后台功能及数据展示做到前台页面上</td>
<td>部分完成</td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td>前台样式用起来</td>
<td>前台样式使用通用bootstrap样式包</td>
<td>未完成</td>
</tr>
<tr>
<td style="text-align:left">3</td>
<td>—</td>
<td>—</td>
<td>—</td>
</tr>
</tbody>
</table>
<h3 id="1-django跑起来"><a href="#1-django跑起来" class="headerlink" title="1. django跑起来"></a>1. django跑起来</h3><p>引用：</p>
<p>官方文档</p>
<h4 id="用到的功能："><a href="#用到的功能：" class="headerlink" title="用到的功能："></a>用到的功能：</h4><p>模板分页：</p>
<p><a href="https://mozillazg.com/2013/01/django-pagination-by-use-paginator.html" target="_blank" rel="external">https://mozillazg.com/2013/01/django-pagination-by-use-paginator.html</a></p>
<p><a href="http://python.usyiyi.cn/django/topics/pagination.html" target="_blank" rel="external">http://python.usyiyi.cn/django/topics/pagination.html</a></p>
<h3 id="2-gunicorn跑起来"><a href="#2-gunicorn跑起来" class="headerlink" title="2. gunicorn跑起来"></a>2. gunicorn跑起来</h3><p>引用：</p>
<p><a href="http://foofish.net/blog/18/django-deploy" target="_blank" rel="external">http://foofish.net/blog/18/django-deploy</a></p>
<p><a href="http://michal.karzynski.pl/blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/" target="_blank" rel="external">http://michal.karzynski.pl/blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/</a></p>
<h4 id="gunicorn超时时间设置"><a href="#gunicorn超时时间设置" class="headerlink" title="gunicorn超时时间设置"></a>gunicorn超时时间设置</h4><p>引用：</p>
<p><a href="http://stackoverflow.com/questions/6816215/gunicorn-nginx-timeout-problem" target="_blank" rel="external">http://stackoverflow.com/questions/6816215/gunicorn-nginx-timeout-problem</a></p>
<p>脚本文件bin/gunicorn_start.sh</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">NUM_WORKERS=<span class="number">3</span></div><div class="line">TIMEOUT=<span class="number">120</span></div><div class="line"></div><div class="line"><span class="keyword">exec</span> gunicorn $&#123;DJANGO_WSGI_MODULE&#125;:application \</div><div class="line">--name $NAME \</div><div class="line">--workers $NUM_WORKERS \</div><div class="line">--timeout $TIMEOUT \</div><div class="line">--log-level=debug \</div><div class="line">--bind=<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">9000</span> \</div><div class="line">--pid=$PIDFILE</div></pre></td></tr></table></figure>
<h3 id="3-nginx跑起来"><a href="#3-nginx跑起来" class="headerlink" title="3. nginx跑起来"></a>3. nginx跑起来</h3><p>引用：</p>
<p><a href="http://blog.csdn.net/qq_24861509/article/details/45727983" target="_blank" rel="external">http://blog.csdn.net/qq_24861509/article/details/45727983</a></p>
<p><a href="http://www.111cn.net/sys/linux/79751.htm" target="_blank" rel="external">http://www.111cn.net/sys/linux/79751.htm</a></p>
<h3 id="4-supervisor跑起来"><a href="#4-supervisor跑起来" class="headerlink" title="4. supervisor跑起来"></a>4. supervisor跑起来</h3><ul>
<li>安装</li>
</ul>
<p><code>sudo apt-get install supervisor</code></p>
<ul>
<li>启动</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">service supervisor start/restart/stop</div><div class="line"></div><div class="line">/etc/init.d/supervisor start/restart/stop</div></pre></td></tr></table></figure>
<ul>
<li>配置文件位置</li>
</ul>
<p><code>/etc/supervisor/supervisord.conf</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">; supervisor config file</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">[unix_http_server]</div><div class="line"></div><div class="line">#file=/var/run/supervisor.sock   ; (the path to the socket file)</div><div class="line"></div><div class="line">file=/tmp/supervisor.sock	;</div><div class="line"></div><div class="line">chmod=0700                       ; sockef file mode (default 0700)</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">[supervisord]</div><div class="line"></div><div class="line">logfile=/var/log/supervisor/supervisord.log ; (main log file;default $CWD/supervisord.log)</div><div class="line"></div><div class="line">pidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)</div><div class="line"></div><div class="line">childlogdir=/var/log/supervisor            ; (&apos;AUTO&apos; child log dir, default $TEMP)</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">; the below section must remain in the config file for RPC</div><div class="line"></div><div class="line">; (supervisorctl/web interface) to work, additional interfaces may be</div><div class="line"></div><div class="line">; added by defining them in separate rpcinterface: sections</div><div class="line"></div><div class="line">[rpcinterface:supervisor]</div><div class="line"></div><div class="line">supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">[supervisorctl]</div><div class="line"></div><div class="line">#serverurl=unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket</div><div class="line"></div><div class="line">serverurl=unix:///tmp/supervisor.sock ;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">; The [include] section can just contain the &quot;files&quot; setting.  This</div><div class="line"></div><div class="line">; setting can list multiple files (separated by whitespace or</div><div class="line"></div><div class="line">; newlines).  It can also contain wildcards.  The filenames are</div><div class="line"></div><div class="line">; interpreted as relative to this file.  Included files *cannot*</div><div class="line"></div><div class="line">; include files themselves.</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">[include]</div><div class="line"></div><div class="line">files = /etc/supervisor/conf.d/*.conf</div></pre></td></tr></table></figure>
<ul>
<li>增加任务</li>
</ul>
<p><code>/etc/supervisor/conf.d/autohome_celery.conf</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">[program:autohome_celery]</div><div class="line"></div><div class="line">directory = /home/hanz/workspace/PycharmProjects/autohome_data_site</div><div class="line"></div><div class="line">command = /home/hanz/workspace/my-venv2.7/bin/python manage.py celery worker -c 6 -l debug</div><div class="line"></div><div class="line">autostart=true</div><div class="line"></div><div class="line">autorestart=true</div><div class="line"></div><div class="line">startsecs=3</div><div class="line"></div><div class="line">user = hanz                                                          ;</div><div class="line"></div><div class="line">stdout_logfile = /home/hanz/workspace/PycharmProjects/autohome_data_site/logs/autohome_celery.log</div><div class="line"></div><div class="line">redirect_stderr = true</div></pre></td></tr></table></figure>
<ul>
<li>添加web显示页面</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">[inet_http_server]         ; inet (TCP) server disabled by default</div><div class="line"></div><div class="line">port=9001        ; (ip_address:port specifier, *:port for all iface)</div><div class="line"></div><div class="line">username=admin             ; (default is no username (open server))</div><div class="line"></div><div class="line">password=123               ; (default is no password (open server))</div></pre></td></tr></table></figure>
<p>引用：</p>
<p><a href="http://www.cnblogs.com/gsblog/p/3730293.html" target="_blank" rel="external">http://www.cnblogs.com/gsblog/p/3730293.html</a></p>
<p><a href="http://www.cnblogs.com/yjf512/archive/2012/03/05/2380496.html" target="_blank" rel="external">http://www.cnblogs.com/yjf512/archive/2012/03/05/2380496.html</a></p>
<p><a href="http://www.cnblogs.com/maseng/p/4670473.html" target="_blank" rel="external">http://www.cnblogs.com/maseng/p/4670473.html</a></p>
<p><a href="http://liyangliang.me/posts/2015/06/using-supervisor/" target="_blank" rel="external">http://liyangliang.me/posts/2015/06/using-supervisor/</a></p>
<h3 id="5-celery跑起来"><a href="#5-celery跑起来" class="headerlink" title="5. celery跑起来"></a>5. celery跑起来</h3><ul>
<li>独立celery+python脚本</li>
</ul>
<ul>
<li>django-celery替代celery，在django项目中的使用方法</li>
</ul>
<ul>
<li>监控界面：flower</li>
</ul>
<ol>
<li>安装：</li>
</ol>
<p><code>pip install flower</code></p>
<ol>
<li>使用方法：</li>
</ol>
<p>运行服务打开<a href="http://localhost:5555：" target="_blank" rel="external">http://localhost:5555：</a></p>
<p><code>flower --port=5555</code></p>
<p>或者从celery运行：</p>
<p><code>celery flower --address=127.0.0.1 --port=5555</code></p>
<p>Broker URL 和其他配置选项能够通过一个标准的celery选项：</p>
<p><code>celery flower --broker=amqp://guest:guest@localhost:5672//</code></p>
<p>在setting中添加：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">djcelery.setup_loader()</div><div class="line">CELERY_TIMEZONE = <span class="string">'Asia/Shanghai'</span></div><div class="line">BROKER_URL = <span class="string">'redis://127.0.0.1:6379/8'</span></div><div class="line">CELERY_RESULT_BACKEND = <span class="string">'redis://127.0.0.1:6379/9'</span></div><div class="line">CELERYBEAT_SCHEDULER = <span class="string">'djcelery.schedulers.DatabaseScheduler'</span></div><div class="line">CELERY_IMPORTS = (<span class="string">"apps.app1.tasks"</span>, <span class="string">"autohome.views"</span>)</div></pre></td></tr></table></figure>
<p>想要使用任务 ，一定要imports对应的py文件，修改后需要重启celery服务</p>
<p>引用：</p>
<p><a href="http://flower-docs-cn.readthedocs.io/zh/latest/install.html" target="_blank" rel="external">http://flower-docs-cn.readthedocs.io/zh/latest/install.html</a></p>
<p>-</p>
<p>引用：</p>
<blockquote>
<p><a href="http://www.celeryproject.org/" target="_blank" rel="external">http://www.celeryproject.org/</a><br><a href="http://www.liaoxuefeng.com/article/00137760323922531a8582c08814fb09e9930cede45e3cc000" target="_blank" rel="external">http://www.liaoxuefeng.com/article/00137760323922531a8582c08814fb09e9930cede45e3cc000</a><br><a href="http://www.jianshu.com/p/1840035cb510" target="_blank" rel="external">http://www.jianshu.com/p/1840035cb510</a><br><a href="http://www.dongwm.com/archives/how-to-use-celery/" target="_blank" rel="external">http://www.dongwm.com/archives/how-to-use-celery/</a><br><a href="http://liuzxc.github.io/blog/celery/" target="_blank" rel="external">http://liuzxc.github.io/blog/celery/</a><br><a href="http://opslinux.com/2015/09/22/celery%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%AE%9E%E8%B7%B5/" target="_blank" rel="external">http://opslinux.com/2015/09/22/celery%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%AE%9E%E8%B7%B5/</a><br><a href="http://blog.csdn.net/vintage_1/article/details/47664297" target="_blank" rel="external">http://blog.csdn.net/vintage_1/article/details/47664297</a></p>
</blockquote>
<p>django celery</p>
<blockquote>
<p><a href="http://blog.csdn.net/vintage_1/article/details/47664297" target="_blank" rel="external">http://blog.csdn.net/vintage_1/article/details/47664297</a><br><a href="http://maslino.website/post/celery-documentation-django.html" target="_blank" rel="external">http://maslino.website/post/celery-documentation-django.html</a></p>
</blockquote>
<h3 id="6-jenkins走起"><a href="#6-jenkins走起" class="headerlink" title="6. jenkins走起"></a>6. jenkins走起</h3><ul>
<li>jenkins 邮件配置</li>
</ul>
<p>引用：</p>
<blockquote>
<p><a href="http://www.cnblogs.com/amosli/p/3549918.html" target="_blank" rel="external">http://www.cnblogs.com/amosli/p/3549918.html</a><br><a href="http://www.cnblogs.com/GGHHLL/p/jenkins.html" target="_blank" rel="external">http://www.cnblogs.com/GGHHLL/p/jenkins.html</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基于python环境的各类环境搭建&quot;&gt;&lt;a href=&quot;#基于python环境的各类环境搭建&quot; class=&quot;headerlink&quot; title=&quot;基于python环境的各类环境搭建&quot;&gt;&lt;/a&gt;基于python环境的各类环境搭建&lt;/h1&gt;&lt;h2 id=&quot;—服务类—
    
    </summary>
    
      <category term="python" scheme="http://sugar.yer.pub/categories/python/"/>
    
    
      <category term="python, gunicorn, django, supervisor, celery" scheme="http://sugar.yer.pub/tags/python-gunicorn-django-supervisor-celery/"/>
    
  </entry>
  
  <entry>
    <title>linux免密码认证配置</title>
    <link href="http://sugar.yer.pub/2016/12/12/linux%E5%85%8D%E5%AF%86%E7%A0%81%E8%AE%A4%E8%AF%81%E9%85%8D%E7%BD%AE/"/>
    <id>http://sugar.yer.pub/2016/12/12/linux免密码认证配置/</id>
    <published>2016-12-12T03:26:53.000Z</published>
    <updated>2016-12-12T11:44:17.077Z</updated>
    
    <content type="html"><![CDATA[<h1 id="服务器免密码认证"><a href="#服务器免密码认证" class="headerlink" title="服务器免密码认证"></a>服务器免密码认证</h1><hr>
<blockquote>
<p>配置过程很简单，但每次都忘记一些细节，故做个笔记</p>
</blockquote>
<h3 id="单向免密码登陆"><a href="#单向免密码登陆" class="headerlink" title="单向免密码登陆"></a>单向免密码登陆</h3><p>服务器A，PC机B。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;服务器免密码认证&quot;&gt;&lt;a href=&quot;#服务器免密码认证&quot; class=&quot;headerlink&quot; title=&quot;服务器免密码认证&quot;&gt;&lt;/a&gt;服务器免密码认证&lt;/h1&gt;&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;配置过程很简单，但每次都忘记一些细节，故做个笔记&lt;/p&gt;
    
    </summary>
    
      <category term="server" scheme="http://sugar.yer.pub/categories/server/"/>
    
    
      <category term="linux, ubuntu, rsa认证" scheme="http://sugar.yer.pub/tags/linux-ubuntu-rsa%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>python中的文件读取</title>
    <link href="http://sugar.yer.pub/2016/12/11/python%E4%B8%AD%E7%9A%84%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96/"/>
    <id>http://sugar.yer.pub/2016/12/11/python中的文件读取/</id>
    <published>2016-12-10T18:40:29.000Z</published>
    <updated>2016-12-12T11:42:15.421Z</updated>
    
    <content type="html"><![CDATA[<h1 id="深入python中文件读取的各类方法"><a href="#深入python中文件读取的各类方法" class="headerlink" title="深入python中文件读取的各类方法"></a>深入python中文件读取的各类方法</h1><blockquote>
<p>参考<a href="http://www.pythondoc.com/pythontutorial3/index.html" target="_blank" rel="external">文档</a></p>
</blockquote>
<h2 id="基本方法"><a href="#基本方法" class="headerlink" title="基本方法"></a>基本方法</h2>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;深入python中文件读取的各类方法&quot;&gt;&lt;a href=&quot;#深入python中文件读取的各类方法&quot; class=&quot;headerlink&quot; title=&quot;深入python中文件读取的各类方法&quot;&gt;&lt;/a&gt;深入python中文件读取的各类方法&lt;/h1&gt;&lt;blockquo
    
    </summary>
    
      <category term="python" scheme="http://sugar.yer.pub/categories/python/"/>
    
    
      <category term="python, 文件, 读写" scheme="http://sugar.yer.pub/tags/python-%E6%96%87%E4%BB%B6-%E8%AF%BB%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title>居住证办理</title>
    <link href="http://sugar.yer.pub/2016/12/11/%E5%B1%85%E4%BD%8F%E8%AF%81%E5%8A%9E%E7%90%86/"/>
    <id>http://sugar.yer.pub/2016/12/11/居住证办理/</id>
    <published>2016-12-10T17:26:18.000Z</published>
    <updated>2016-12-12T11:42:15.409Z</updated>
    
    <content type="html"><![CDATA[<h1 id="居住证办理（原暂住证）"><a href="#居住证办理（原暂住证）" class="headerlink" title="居住证办理（原暂住证）"></a>居住证办理（原暂住证）</h1><p><a href="https://bjjzzpt.com/" target="_blank" rel="external">办理居住证传送门</a></p>
<p>今天周六，一大早就起来去预约的网点办理居住证，毕竟是去衙门口办事儿，不早点估计办不完。</p>
<h2 id="准备的材料"><a href="#准备的材料" class="headerlink" title="准备的材料"></a>准备的材料</h2><blockquote>
<p>对于材料的准备，前期准备还是挺充分的，网上也有相关的提示。<br>虽说有了申请网站，而且各种<br>提示相对于之前来说也很全面，但距离商业类的服务站点，还是差了不少。</p>
</blockquote>
<p>以网上预约办理居住证，条件选的是5年社保，说说需要准备哪些：</p>
<h3 id="身份证"><a href="#身份证" class="headerlink" title="身份证"></a>身份证</h3><p>没什么可说的，身份证必备，能证明真身的利器。</p>
<h3 id="半年内的社保个人权益记录"><a href="#半年内的社保个人权益记录" class="headerlink" title="半年内的社保个人权益记录"></a>半年内的社保个人权益记录</h3><p>去北京市社会保障服务平台申请，<a href="http://www.bjrbj.gov.cn/csibiz/home/" target="_blank" rel="external">传送门</a></p>
<p>登陆后在左树部分，选择个人权益记录 -&gt; 参保人缴费信息定制，从当前能选的最大月份往前推6个月即可。<br>时间选好点击提交请求，即可。</p>
<p>一般情况下，当天提交第二天才能出结果。</p>
<p>结果出来后打印这张单子。</p>
<h3 id="房租租赁合同（如果有房本，直接拿着房本）"><a href="#房租租赁合同（如果有房本，直接拿着房本）" class="headerlink" title="房租租赁合同（如果有房本，直接拿着房本）"></a>房租租赁合同（如果有房本，直接拿着房本）</h3><p>在有效期内的房屋租赁合同即可，清楚标明甲方乙方和租赁结束日期的。</p>
<blockquote>
<p>我办理的时候，还准备了其他的东西，比如照片、公司的劳动合同，保密协议什么的，全都拿着<br>结果是根本也用不上。</p>
</blockquote>
<h2 id="寻找办理点"><a href="#寻找办理点" class="headerlink" title="寻找办理点"></a>寻找办理点</h2><p>网约居住证受理网点，不是辖区派出所，一般都是社区的来京人员服务站，如果你不熟悉，还是不太好找的。<br>好在鼻子底下有张嘴，百度到附近，然后问下大爷大妈基本很快就能找到了。</p>
<h2 id="办理过程"><a href="#办理过程" class="headerlink" title="办理过程"></a>办理过程</h2><p>值得一提的是整个的办理过程，如果你拿着以上的文件，办理过程非常顺畅。</p>
<h3 id="扫描文件"><a href="#扫描文件" class="headerlink" title="扫描文件"></a>扫描文件</h3><p>会逐个的把你的身份证、权益记录、租房合同都用扫描仪扫描下来，不保留你任何的纸质文件。</p>
<h3 id="回执单"><a href="#回执单" class="headerlink" title="回执单"></a>回执单</h3><p>扫描完成后，会给你一张回执单，如果你网约的时候选的是EMS邮寄，则待15天左右即可；<br>如果是自取，需要到区域派出所领取。</p>
<blockquote>
<p>我就是选的EMS送，多方便啊，省得再请假了，人性化。</p>
</blockquote>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>北京取消暂住证换居住证，东西我觉得还是那个东西，只不过是换了个叫法而已。<br>如果想在北京买房买车，摇号，小孩上幼儿园，那么还是办一个吧，比较方便；<br>即便是你有工作居住证，也要办一个（据说是政策规定的）</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;居住证办理（原暂住证）&quot;&gt;&lt;a href=&quot;#居住证办理（原暂住证）&quot; class=&quot;headerlink&quot; title=&quot;居住证办理（原暂住证）&quot;&gt;&lt;/a&gt;居住证办理（原暂住证）&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://bjjzzpt.com/&quot; tar
    
    </summary>
    
      <category term="life" scheme="http://sugar.yer.pub/categories/life/"/>
    
    
      <category term="北京工作居住证" scheme="http://sugar.yer.pub/tags/%E5%8C%97%E4%BA%AC%E5%B7%A5%E4%BD%9C%E5%B1%85%E4%BD%8F%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>talking about python unittest</title>
    <link href="http://sugar.yer.pub/2016/12/09/talking-about-python-unittest/"/>
    <id>http://sugar.yer.pub/2016/12/09/talking-about-python-unittest/</id>
    <published>2016-12-09T10:09:04.000Z</published>
    <updated>2016-12-12T11:47:48.105Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python-unittest-基础教程分享"><a href="#python-unittest-基础教程分享" class="headerlink" title="python unittest 基础教程分享"></a>python unittest 基础教程分享</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;python-unittest-基础教程分享&quot;&gt;&lt;a href=&quot;#python-unittest-基础教程分享&quot; class=&quot;headerlink&quot; title=&quot;python unittest 基础教程分享&quot;&gt;&lt;/a&gt;python unittest 基础教程
    
    </summary>
    
      <category term="python" scheme="http://sugar.yer.pub/categories/python/"/>
    
    
      <category term="python unittest test" scheme="http://sugar.yer.pub/tags/python-unittest-test/"/>
    
  </entry>
  
  <entry>
    <title>start-hexo</title>
    <link href="http://sugar.yer.pub/2016/12/09/start-hexo/"/>
    <id>http://sugar.yer.pub/2016/12/09/start-hexo/</id>
    <published>2016-12-09T01:40:20.000Z</published>
    <updated>2016-12-12T11:39:39.013Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HEXO"><a href="#HEXO" class="headerlink" title="HEXO"></a>HEXO</h1><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><blockquote>
<p>系统：ubuntu 16.04 64位</p>
</blockquote>
<h4 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install git</div></pre></td></tr></table></figure>
<h4 id="安装node"><a href="#安装node" class="headerlink" title="安装node"></a>安装node</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">curl <span class="_">-s</span>L https://deb.nodesource.com/setup_6.x | sudo -E bash -</div><div class="line"></div><div class="line">sudo apt-get install -y nodejs</div></pre></td></tr></table></figure>
<blockquote>
<p>不同系统安装node参见：<a href="https://nodejs.org/en/download/package-manager/" target="_blank" rel="external">这里</a></p>
</blockquote>
<h4 id="安装HEXO"><a href="#安装HEXO" class="headerlink" title="安装HEXO"></a>安装HEXO</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install hexo-cli -g</div><div class="line">npm install hexo --save</div></pre></td></tr></table></figure>
<blockquote>
<p>hexo官网很详细，见<a href="https://hexo.io/zh-cn/" target="_blank" rel="external">这里</a></p>
</blockquote>
<h2 id="至此，环境基本配置完毕。"><a href="#至此，环境基本配置完毕。" class="headerlink" title="至此，环境基本配置完毕。"></a>至此，环境基本配置完毕。</h2><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init myblog</div></pre></td></tr></table></figure>
<h2 id="教程参考："><a href="#教程参考：" class="headerlink" title="教程参考："></a>教程参考：</h2><blockquote>
<p><a href="http://theme-next.iissnan.com/" target="_blank" rel="external">官方教程</a><br><a href="http://jiji262.github.io/" target="_blank" rel="external">令狐葱</a></p>
<p><a href="http://zhiho.github.io/2015/09/29/hexo-next/" target="_blank" rel="external">Zhiho’s Blog</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;HEXO&quot;&gt;&lt;a href=&quot;#HEXO&quot; class=&quot;headerlink&quot; title=&quot;HEXO&quot;&gt;&lt;/a&gt;HEXO&lt;/h1&gt;&lt;h2 id=&quot;环境配置&quot;&gt;&lt;a href=&quot;#环境配置&quot; class=&quot;headerlink&quot; title=&quot;环境配置&quot;&gt;&lt;/a
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>python process control cycle: While and For</title>
    <link href="http://sugar.yer.pub/2016/12/09/python-process-control-cycle-While-and-For/"/>
    <id>http://sugar.yer.pub/2016/12/09/python-process-control-cycle-While-and-For/</id>
    <published>2016-12-08T22:22:48.000Z</published>
    <updated>2016-12-12T11:43:42.417Z</updated>
    
    <content type="html"><![CDATA[<h1 id="循环（迭代器与生成器）的那点事"><a href="#循环（迭代器与生成器）的那点事" class="headerlink" title="循环（迭代器与生成器）的那点事"></a>循环（迭代器与生成器）的那点事</h1><h2 id="while"><a href="#while" class="headerlink" title="while"></a>while</h2><ul>
<li>while 执行时的基本流程图</li>
</ul>
<p><img src="http://oi1wvrjc2.bkt.clouddn.com/while.png" alt="image" title="while流程图"></p>
<blockquote>
<p>while语句的基本格式</p>
</blockquote>
<p>其中<exception>为对参数或表达式取布尔值，即：bool(<exception>)，结果只有两种，True和False</exception></exception></p>
<p>如下：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">while</span> &lt;exception&gt;:</div><div class="line">    &lt;suite&gt;</div><div class="line">    &lt;<span class="keyword">break</span>&gt;</div><div class="line"><span class="keyword">else</span>:</div><div class="line">    &lt;suite&gt;</div></pre></td></tr></table></figure>
<blockquote>
<p>tips:</p>
</blockquote>
<p>讲述一下bool值：</p>
<ol>
<li><p>在数值上下文环境中，True被当作1, False被当作0；如True+2 =&gt; 3, int(True) =&gt; 1</p>
</li>
<li><p>其他类型值转换bool值时，除了’’, “”, “”””, 0, (), [], {}, None, 0.0, 0L, 0.0+0.0j, False值为Faluse，其他的都为True；例如：bool(-1) =&gt; True</p>
</li>
</ol>
<hr>
<ul>
<li>while表达式中的break，指跳出最近的所在的循环；一般为满足条件后跳出，以防止死循环； </li>
</ul>
<p>举例：猜字游戏</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">guess</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        input_seed = raw_input(<span class="string">"please input the seed:"</span>)</div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            seed = int(input_seed)</div><div class="line">            <span class="keyword">if</span> seed == <span class="number">11</span>:</div><div class="line">                print(<span class="string">"congretulations to you!"</span>)</div><div class="line">                <span class="keyword">break</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                print(<span class="string">"guess again!"</span>)</div><div class="line">        <span class="keyword">except</span> ValueError:</div><div class="line">            print(<span class="string">"please input int type"</span>)</div><div class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</div><div class="line">            print(e)</div></pre></td></tr></table></figure>
<ul>
<li>else为可选部分，当控制权离开循环而又没有碰到break语句时，就会执行else中的语句；</li>
</ul>
<p>[注意：当第一次判断while循环条件时就不满足时，即一次循环也没有执行时，还是会执行else语句的]</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">func1</span><span class="params">()</span>:</span></div><div class="line">    keys = <span class="string">"goodjob"</span></div><div class="line">    <span class="keyword">while</span> keys:</div><div class="line">        print(keys)</div><div class="line">        keys = keys[<span class="number">1</span>:]</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        print(<span class="string">"done"</span>)</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">func3</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">while</span> <span class="keyword">False</span>:</div><div class="line">        print(<span class="string">"false"</span>)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        print(<span class="string">"the end"</span>)</div></pre></td></tr></table></figure>
<ul>
<li>break, continue和pass</li>
</ul>
<blockquote>
<p>break: 跳出最近所在的循环 （指跳出整个循环）</p>
</blockquote>
<p>continue: 立即跳到循环的顶端，即跳过本次循环，执行下一次循环</p>
<p>pass: 占位语句，无实际作用</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">a = <span class="number">10</span></div><div class="line">b = <span class="number">0</span></div><div class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">    <span class="keyword">if</span> a == <span class="number">1</span>: <span class="keyword">break</span></div><div class="line">    b += <span class="number">1</span></div><div class="line">    print(<span class="string">"b="</span>,b)</div><div class="line">    <span class="keyword">if</span> b == <span class="number">100</span>: <span class="keyword">break</span></div><div class="line">    <span class="keyword">if</span> a == <span class="number">3</span>: <span class="keyword">continue</span></div><div class="line">    a -= <span class="number">1</span></div><div class="line">    print(<span class="string">"a="</span>,a)</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">func2</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        <span class="keyword">pass</span></div></pre></td></tr></table></figure>
<hr>
<h2 id="for"><a href="#for" class="headerlink" title="for"></a>for</h2><blockquote>
<p>for语句的基本格式和一般用法</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> &lt;target&gt; <span class="keyword">in</span> &lt;object&gt;:</div><div class="line">    &lt;suite1&gt;</div><div class="line"><span class="keyword">else</span>:</div><div class="line">    &lt;suite2&gt;</div></pre></td></tr></table></figure>
<blockquote>
<p>执行方式</p>
</blockquote>
<p>当运行for循环时，会将序列对象中的元素逐个赋值给目标，然后为每个元素执行循环主体。</p>
<hr>
<ul>
<li>for循环也有break, continue和else子句</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> &lt;target&gt; <span class="keyword">in</span> &lt;object&gt;:</div><div class="line">    &lt;suite1&gt;</div><div class="line">    <span class="keyword">if</span> &lt;test&gt;: <span class="keyword">break</span></div><div class="line">    <span class="keyword">if</span> &lt;test&gt;: contiune</div><div class="line"><span class="keyword">else</span>:</div><div class="line">    &lt;suite2&gt;</div></pre></td></tr></table></figure>
<ul>
<li>基本用法 </li>
</ul>
<blockquote>
<p>求1-10之和，之积</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">func4</span><span class="params">()</span>:</span></div><div class="line">    h = <span class="number">0</span></div><div class="line">    j = <span class="number">1</span></div><div class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> xrange(<span class="number">1</span>,<span class="number">11</span>):</div><div class="line">        h += x</div><div class="line">        j *= x</div><div class="line">    <span class="keyword">print</span> h, j</div></pre></td></tr></table></figure>
<ul>
<li>for中的元组赋值</li>
</ul>
<p>若对应列表中的元组进行赋值，则可看做对元组的解包运算；</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">func5</span><span class="params">()</span>:</span></div><div class="line">    T = [(<span class="number">1</span>,<span class="number">2</span>),(<span class="number">3</span>,<span class="number">4</span>),(<span class="number">5</span>,<span class="number">6</span>)]</div><div class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> T:</div><div class="line">        <span class="keyword">print</span> x</div><div class="line">    <span class="keyword">for</span> x, y <span class="keyword">in</span> T:</div><div class="line">        print(x,<span class="string">"=&gt;"</span>,y)</div></pre></td></tr></table></figure>
<ul>
<li>结合items操作字典</li>
</ul>
<p>for 循环中的元组使得用items方法来遍历字典中的键和值变得很方便，而不必再遍历键并手动索引以获取值</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">func6</span><span class="params">()</span>:</span></div><div class="line">    D = &#123;<span class="string">'a'</span>:<span class="number">1</span>,<span class="string">'b'</span>:<span class="number">2</span>,<span class="string">'c'</span>:<span class="number">3</span>&#125;</div><div class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> D:</div><div class="line">        <span class="keyword">print</span> x</div><div class="line">    <span class="keyword">for</span> x, y <span class="keyword">in</span> D.items():</div><div class="line">        print(x,<span class="string">"=&gt;"</span>,y)</div></pre></td></tr></table></figure>
<ul>
<li>多重for循环</li>
</ul>
<p>注意：else是第二层循环中的子句，而非if的子句</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">func7</span><span class="params">()</span>:</span></div><div class="line">    items = [<span class="string">'aaa'</span>,<span class="number">111</span>,(<span class="number">4</span>,<span class="number">5</span>),<span class="number">2.01</span>]</div><div class="line">    tests = [(<span class="number">4</span>,<span class="number">5</span>),<span class="number">3.14</span>]</div><div class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> tests:</div><div class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> items:</div><div class="line">            <span class="keyword">if</span> key == item:</div><div class="line">                print(key, <span class="string">"was found"</span>)</div><div class="line">                <span class="keyword">break</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            print(key, <span class="string">"not found"</span>)</div></pre></td></tr></table></figure>
<ul>
<li>常用range搭配，来做循环计数器和索引</li>
</ul>
<blockquote>
<p>range，python2.7为生成list，python3.*与xrange合并，均变为生成可迭代的对象；</p>
</blockquote>
<p>简单说区别：生成可迭代对象比生成list速度更快，占用内存更小，在大数据量情况下非常有效。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">list(range(<span class="number">-5</span>,<span class="number">5</span>))</div><div class="line">&gt;&gt; [<span class="number">-5</span>, <span class="number">-4</span>, <span class="number">-3</span>, <span class="number">-2</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</div><div class="line">list(range(<span class="number">5</span>,<span class="number">-5</span>,<span class="number">-2</span>))</div><div class="line">&gt;&gt; [<span class="number">5</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">-3</span>]</div></pre></td></tr></table></figure>
<ul>
<li>利用range进行索引，可以通过控制range来实现特殊的遍历，例如，可跳过一些元素</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">S = <span class="string">'abcdefghijklmn'</span></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(S), <span class="number">2</span>): <span class="keyword">print</span> S[i],</div><div class="line">&gt;&gt; a c e g i k m</div></pre></td></tr></table></figure>
<blockquote>
<p>扩展：其他的跳过元素的方式，运用切片技术，如需要可详细了解：</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> item <span class="keyword">in</span> S[::<span class="number">2</span>]:<span class="keyword">print</span> item,</div><div class="line">&gt;&gt; a c e g i k m</div></pre></td></tr></table></figure>
<ul>
<li>并行遍历</li>
</ul>
<p>对两组列表进行并行遍历</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">func9</span><span class="params">()</span>:</span></div><div class="line">    a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</div><div class="line">    b = [<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">44</span>]</div><div class="line">    c = zip(a,b)</div><div class="line">    <span class="keyword">print</span> type(c)</div><div class="line">    <span class="keyword">print</span> c</div><div class="line">    <span class="keyword">for</span> m, n <span class="keyword">in</span> c:</div><div class="line">        <span class="keyword">print</span> m,<span class="string">"+"</span>,n,<span class="string">"="</span>,m+n</div><div class="line">&gt;&gt;</div><div class="line">&lt;type <span class="string">'list'</span>&gt;</div><div class="line">[(<span class="number">1</span>, <span class="number">11</span>), (<span class="number">2</span>, <span class="number">22</span>), (<span class="number">3</span>, <span class="number">33</span>), (<span class="number">4</span>, <span class="number">44</span>)]</div><div class="line"><span class="number">1</span> + <span class="number">11</span> = <span class="number">12</span></div><div class="line"><span class="number">2</span> + <span class="number">22</span> = <span class="number">24</span></div><div class="line"><span class="number">3</span> + <span class="number">33</span> = <span class="number">36</span></div><div class="line"><span class="number">4</span> + <span class="number">44</span> = <span class="number">48</span></div></pre></td></tr></table></figure>
<blockquote>
<p>扩展：zip和range一样，2.×时代生成为list，3.×时代均为可迭代对象；</p>
</blockquote>
<hr>
<ul>
<li>产生偏移和元素: enumerate</li>
</ul>
<p>有时可能会有这种需求，查看迭代的元素所在的位置，可以这样实现</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">func10</span><span class="params">()</span>:</span></div><div class="line">    a = <span class="string">"abcdefg"</span></div><div class="line">    j = <span class="number">0</span></div><div class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> a:</div><div class="line">        <span class="keyword">print</span> x, <span class="string">"offset is "</span>,j</div><div class="line">        j += <span class="number">1</span></div><div class="line">&gt;&gt;&gt;</div><div class="line">a offset <span class="keyword">is</span>  <span class="number">0</span></div><div class="line">b offset <span class="keyword">is</span>  <span class="number">1</span></div><div class="line">c offset <span class="keyword">is</span>  <span class="number">2</span></div><div class="line">d offset <span class="keyword">is</span>  <span class="number">3</span></div><div class="line">e offset <span class="keyword">is</span>  <span class="number">4</span></div><div class="line">f offset <span class="keyword">is</span>  <span class="number">5</span></div><div class="line">g offset <span class="keyword">is</span>  <span class="number">6</span></div></pre></td></tr></table></figure>
<p>但内置函数enumerate可以帮我们做</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">func11</span><span class="params">()</span>:</span></div><div class="line">    a = <span class="string">"abcdefg"</span></div><div class="line">    j = <span class="number">0</span></div><div class="line">    <span class="keyword">for</span> m, n <span class="keyword">in</span> enumerate(a):</div><div class="line">        <span class="keyword">print</span> n, <span class="string">"offset is --"</span>, m</div></pre></td></tr></table></figure>
<h2 id="列表推导"><a href="#列表推导" class="headerlink" title="列表推导"></a>列表推导</h2><blockquote>
<p>列表推导式为从序列中创建列表提供了一个简单的方法。</p>
</blockquote>
<h3 id="普通创建列表方式"><a href="#普通创建列表方式" class="headerlink" title="普通创建列表方式"></a>普通创建列表方式</h3><p>我们可以像这样创建一个普通的列表，像这样：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">testlist = []</div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>):</div><div class="line">    testlist.append(x**<span class="number">2</span>)</div><div class="line"></div><div class="line"><span class="keyword">print</span> testlist</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>[<span class="number">0</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>, <span class="number">36</span>, <span class="number">49</span>, <span class="number">64</span>, <span class="number">81</span>]</div></pre></td></tr></table></figure></p>
<p>通过上面的程序可以发现，通过for循环中被创建的名为x的变量在循环完毕后，依然存在。<br>如果想完成上面的功能，且不会产生其他的副作用，可以使用lambda来创建：</p>
<h3 id="通过lambda表达式来创建"><a href="#通过lambda表达式来创建" class="headerlink" title="通过lambda表达式来创建"></a>通过lambda表达式来创建</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">testlist = list(map(<span class="keyword">lambda</span> x: x**<span class="number">2</span>, range(<span class="number">10</span>)))</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>[<span class="number">0</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>, <span class="number">36</span>, <span class="number">49</span>, <span class="number">64</span>, <span class="number">81</span>]</div></pre></td></tr></table></figure>
<p>还有一种更加易读的创建方式：</p>
<h3 id="通过列表推导创建"><a href="#通过列表推导创建" class="headerlink" title="通过列表推导创建"></a>通过列表推导创建</h3><h4 id="基本列表推导式"><a href="#基本列表推导式" class="headerlink" title="基本列表推导式"></a>基本列表推导式</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">testlist = [x**<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>)]</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>[<span class="number">0</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>, <span class="number">36</span>, <span class="number">49</span>, <span class="number">64</span>, <span class="number">81</span>]</div></pre></td></tr></table></figure>
<p>这种方式更加易读，且创建起列表来得心应手。<br>下面我们来看看，它是如何来创建的，即它的格式是什么。</p>
<blockquote>
<p>列表推导式由包含一个表达式的括号组成，表达式后面跟随一个 for 子句，<br>之后可以有零或多个 for 或 if 子句。结果是一个列表，<br>由表达式依据其后面的 for 和 if 子句上下文计算而来的结果构成。</p>
</blockquote>
<p>等同于：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">testlist = []</div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>):</div><div class="line">    testlist.append(x**<span class="number">2</span>)</div><div class="line"></div><div class="line">testlist</div><div class="line"></div><div class="line">&gt;&gt;&gt;[<span class="number">0</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>, <span class="number">36</span>, <span class="number">49</span>, <span class="number">64</span>, <span class="number">81</span>]</div></pre></td></tr></table></figure></p>
<h4 id="带控制流程的列表推导"><a href="#带控制流程的列表推导" class="headerlink" title="带控制流程的列表推导"></a>带控制流程的列表推导</h4><p>来具体看个例子：<br>双重循环加判断：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[(x, y) <span class="keyword">for</span> x <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] <span class="keyword">for</span> y <span class="keyword">in</span> [<span class="number">3</span>,<span class="number">1</span>,<span class="number">5</span>] <span class="keyword">if</span> x != y ]</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>[(<span class="number">1</span>, <span class="number">3</span>), (<span class="number">1</span>, <span class="number">5</span>), (<span class="number">2</span>, <span class="number">3</span>), (<span class="number">2</span>, <span class="number">1</span>), (<span class="number">2</span>, <span class="number">5</span>), (<span class="number">3</span>, <span class="number">1</span>), (<span class="number">3</span>, <span class="number">5</span>)]</div></pre></td></tr></table></figure></p>
<p>如果看起来太复杂，那么变成常规的语法来看看：<br>上面的等同于：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">testlist = []</div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]:</div><div class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> [<span class="number">3</span>,<span class="number">1</span>,<span class="number">5</span>]:</div><div class="line">        <span class="keyword">if</span> x != y:</div><div class="line">            testlist.append((x, y))</div><div class="line"></div><div class="line">testlist</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>[(<span class="number">1</span>, <span class="number">3</span>), (<span class="number">1</span>, <span class="number">5</span>), (<span class="number">2</span>, <span class="number">3</span>), (<span class="number">2</span>, <span class="number">1</span>), (<span class="number">2</span>, <span class="number">5</span>), (<span class="number">3</span>, <span class="number">1</span>), (<span class="number">3</span>, <span class="number">5</span>)]</div></pre></td></tr></table></figure></p>
<p>注意下上面的for 和if语句的顺序。</p>
<h4 id="嵌套的列表推导式"><a href="#嵌套的列表推导式" class="headerlink" title="嵌套的列表推导式"></a>嵌套的列表推导式</h4><p>列表解析中的第一个表达式可以是任何表达式，包括列表解析。</p>
<p>再看一个例子：<br>有一个长度为4的列表组成的3×4的矩阵，如果想要交换行列，应如何操作？<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">testlist = [</div><div class="line">    [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>],</div><div class="line">    [<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>],</div><div class="line">    [<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>],</div><div class="line">]</div></pre></td></tr></table></figure></p>
<h5 id="普通方式："><a href="#普通方式：" class="headerlink" title="普通方式："></a>普通方式：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">result = []</div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">4</span>):</div><div class="line">    bb = []</div><div class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> testlist:</div><div class="line">        bb.append(y[x])</div><div class="line">    result.append(bb)</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>[[<span class="number">1</span>, <span class="number">5</span>, <span class="number">9</span>], [<span class="number">2</span>, <span class="number">6</span>, <span class="number">10</span>], [<span class="number">3</span>, <span class="number">7</span>, <span class="number">11</span>], [<span class="number">4</span>, <span class="number">8</span>, <span class="number">12</span>]]</div></pre></td></tr></table></figure>
<h5 id="一层列表推导："><a href="#一层列表推导：" class="headerlink" title="一层列表推导："></a>一层列表推导：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">result = []</div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">4</span>):</div><div class="line">    result.append([row[i] <span class="keyword">for</span> i <span class="keyword">in</span> testlist])</div><div class="line"></div><div class="line">result</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>[[<span class="number">1</span>, <span class="number">5</span>, <span class="number">9</span>], [<span class="number">2</span>, <span class="number">6</span>, <span class="number">10</span>], [<span class="number">3</span>, <span class="number">7</span>, <span class="number">11</span>], [<span class="number">4</span>, <span class="number">8</span>, <span class="number">12</span>]]</div></pre></td></tr></table></figure>
<h5 id="双层列表推导"><a href="#双层列表推导" class="headerlink" title="双层列表推导"></a>双层列表推导</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[[y[x] <span class="keyword">for</span> y <span class="keyword">in</span> testlist] <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">4</span>)]</div></pre></td></tr></table></figure>
<h5 id="内置函数处理"><a href="#内置函数处理" class="headerlink" title="内置函数处理"></a>内置函数处理</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">list(zip(*testlist))</div></pre></td></tr></table></figure>
<p>上次讲过一点zip的功能，这里的*号为参数列表的分拆，等同于：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</div><div class="line">b = [<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>]</div><div class="line">c = [<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>]</div><div class="line">tt = zip(a,b,c)</div><div class="line">result = list(tt)</div></pre></td></tr></table></figure></p>
<h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><p>自己偿试将上次的food.py中的循环判断语句，使用列表表达式的方式进行处理</p>
<p>用自己的话来说一遍：<br>把最终要处理的表达式提在最前面，把循环语句放在后面；循环语句与判断语句按顺序依次排列。<br>每一层中扩号都执行了一次append操作。</p>
<h2 id="文件迭代器"><a href="#文件迭代器" class="headerlink" title="文件迭代器"></a>文件迭代器</h2><h3 id="文件读取方法大集合"><a href="#文件读取方法大集合" class="headerlink" title="文件读取方法大集合"></a>文件读取方法大集合</h3><ul>
<li>基本读取文件方法</li>
</ul>
<ul>
<li>with的用法</li>
</ul>
<h2 id="生成器-generator"><a href="#生成器-generator" class="headerlink" title="生成器-generator"></a>生成器-generator</h2><p>yield</p>
<h2 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h2>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;循环（迭代器与生成器）的那点事&quot;&gt;&lt;a href=&quot;#循环（迭代器与生成器）的那点事&quot; class=&quot;headerlink&quot; title=&quot;循环（迭代器与生成器）的那点事&quot;&gt;&lt;/a&gt;循环（迭代器与生成器）的那点事&lt;/h1&gt;&lt;h2 id=&quot;while&quot;&gt;&lt;a hre
    
    </summary>
    
      <category term="python" scheme="http://sugar.yer.pub/categories/python/"/>
    
    
      <category term="python, 迭代" scheme="http://sugar.yer.pub/tags/python-%E8%BF%AD%E4%BB%A3/"/>
    
  </entry>
  
  <entry>
    <title>New World!</title>
    <link href="http://sugar.yer.pub/2016/12/09/New-World/"/>
    <id>http://sugar.yer.pub/2016/12/09/New-World/</id>
    <published>2016-12-08T21:43:00.000Z</published>
    <updated>2016-12-12T11:44:17.085Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
</feed>
